<?xml version="1.0" encoding="UTF-8"?>
<testsuite failures="2"
           name="This feature contains smoke test cases of openwhisk triggers"
           skipped="0"
           tests="2"
           time="3.227476">
   <testcase classname="com.karate.openwhisk.smoketests.TC05_SmokeTest_Trigger"
             name="As a user i want to verify create, update, get, fire, list and delete trigger"
             time="1.075145">
      <failure message="com.intuit.karate.exception.KarateException: &#xA;&#xA;javascript evaluation failed: if (!test_user_key)&#xA;{&#xA;var getNSCreds = karate.callSingle('classpath:com/karate/openwhisk/wskadmin/get-user.feature');&#xA;var test=getNSCreds.Auth; &#xA;karate.set('authFunction',  'Basic '+getNSCreds.Auth);&#xA;karate.set('guid', getNSCreds.uuid[0]);&#xA;}   &#xA;else&#xA;{&#xA;var getGUID = base64decoding(test_user_key); &#xA;karate.set('authFunction' , 'Basic '+test_user_key);&#xA;karate.set('guid' , getGUID);&#xA;karate.log('I am here');&#xA;karate.log(getGUID);&#xA;}, &#xA;&#xA;status code was: 404, expected: 200, response time: 1022, url: https://3678a12b-fc64-4cef-ab97-d7b28c77fbe1-bluemix.cloudant.com:443/whisk_dev_subjects/bladerunner-test, response: {&#34;error&#34;:&#34;not_found&#34;,&#34;reason&#34;:&#34;missing&#34;}&#xA;&#x9;at com.intuit.karate.Script.evalFeatureCall(Script.java:1667)&#xA;&#x9;at com.intuit.karate.Script.call(Script.java:1599)&#xA;&#x9;at com.intuit.karate.Script.callWithCache(Script.java:183)&#xA;&#x9;at com.intuit.karate.Script.evalKarateExpression(Script.java:227)&#xA;&#x9;at com.intuit.karate.Script.evalKarateExpression(Script.java:171)&#xA;&#x9;at com.intuit.karate.Script.assign(Script.java:601)&#xA;&#x9;at com.intuit.karate.Script.assign(Script.java:527)&#xA;&#x9;at com.intuit.karate.StepDefs.def(StepDefs.java:309)&#xA;&#x9;at ✽.* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature')(/Users/rtripath/repo/OPENWHISK-KARATE/ow-karate/target/test-classes/com/karate/openwhisk/smoketests/TC05_SmokeTest_Trigger.feature:27)&#xA;">* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def scriptcode = call read('classpath:com/karate/openwhisk/functions/hello-world.js').passed
* def scriptcodeWithParam = call read('classpath:com/karate/openwhisk/functions/greetings.js').passed
* call [This feature file will either use the NS credentials provided or get the NS of guest] [This line is required please do not delete - or the functions cannot be called] classpath:com/karate/openwhisk/utils/get-auth.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def base64decoding = read('classpath:com/karate/openwhisk/utils/base64_decode.js').passed
* print "Start".............................................................passed
* call [Create Namespace] [Get NS credentials] classpath:com/karate/openwhisk/wskadmin/get-user.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
Given url AdminBaseUrl......................................................passed
* print "I am here in get-user".............................................passed
* def DBpath =..............................................................passed
And path DBpath+nameSpace...................................................passed
And header Authorization = AdminAuth........................................passed
And header Content-Type = 'application/json'................................passed
When method get.............................................................passed
Then status 200.............................................................failed
* eval......................................................................failed
* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature').failed
* def Auth = getAuth.Auth...................................................skipped
* print "Test case started --&gt; verify create, update, get, fire, list and delete trigger".skipped
* def createTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/create-trigger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def triggerName = createTrigger.trgrName..................................skipped
* match createTrigger.responseStatusCode == 200.............................skipped
* print "Successfully Created an trigger"...................................skipped
* def fireTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/fire-trigger.feature') {requestBody:'',nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',triggerName:'#(triggerName)'}.skipped
* def actID = fireTrigger.activationId......................................skipped
* match fireTrigger.responseStatusCode == 204...............................skipped
* print "Successfully fired the trigger"....................................skipped
* def webhooks = callonce read('classpath:com/karate/openwhisk/utils/sleep.feature') {sheepCount:'20'}.skipped
* def triggerDetails = call read('classpath:com/karate/openwhisk/wsktriggers/get-trigger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',triggerName:'#(triggerName)'}.skipped
* print "Successfully got the trigger details"..............................skipped
* def updateTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/update-trigger.feature') {triggerName:'#(triggerName)',nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def triggerName = updateTrigger.trgrName..................................skipped
* print triggerName.........................................................skipped
* print "Successfully updated the trigger"..................................skipped
* def listRules = call read('classpath:com/karate/openwhisk/wsktriggers/list-trigger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* print "Successfully pulled up the list of triggers".......................skipped
* def deleteTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/delete-trigger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',triggerName:'#(triggerName)'}.skipped
* match deleteTrigger.responseStatusCode == 200.............................skipped
* print "Trigger got deleted"...............................................skipped
* print "Test case completed --&gt; verify create, update, get, fire, list and delete trigger".skipped

StackTrace:
com.intuit.karate.exception.KarateException: 

javascript evaluation failed: if (!test_user_key)
{
var getNSCreds = karate.callSingle('classpath:com/karate/openwhisk/wskadmin/get-user.feature');
var test=getNSCreds.Auth; 
karate.set('authFunction',  'Basic '+getNSCreds.Auth);
karate.set('guid', getNSCreds.uuid[0]);
}   
else
{
var getGUID = base64decoding(test_user_key); 
karate.set('authFunction' , 'Basic '+test_user_key);
karate.set('guid' , getGUID);
karate.log('I am here');
karate.log(getGUID);
}, 

status code was: 404, expected: 200, response time: 1022, url: https://3678a12b-fc64-4cef-ab97-d7b28c77fbe1-bluemix.cloudant.com:443/whisk_dev_subjects/bladerunner-test, response: {"error":"not_found","reason":"missing"}
	at com.intuit.karate.Script.evalFeatureCall(Script.java:1667)
	at com.intuit.karate.Script.call(Script.java:1599)
	at com.intuit.karate.Script.callWithCache(Script.java:183)
	at com.intuit.karate.Script.evalKarateExpression(Script.java:227)
	at com.intuit.karate.Script.evalKarateExpression(Script.java:171)
	at com.intuit.karate.Script.assign(Script.java:601)
	at com.intuit.karate.Script.assign(Script.java:527)
	at com.intuit.karate.StepDefs.def(StepDefs.java:309)
	at ✽.* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature')(/Users/rtripath/repo/OPENWHISK-KARATE/ow-karate/target/test-classes/com/karate/openwhisk/smoketests/TC05_SmokeTest_Trigger.feature:27)
</failure>
   </testcase>
   <testcase classname="com.karate.openwhisk.smoketests.TC05_SmokeTest_Trigger"
             name="As a user i want to verify create and fire a trigger with a rule"
             time="2.152331">
      <failure message="com.intuit.karate.exception.KarateException: &#xA;&#xA;javascript evaluation failed: if (!test_user_key)&#xA;{&#xA;var getNSCreds = karate.callSingle('classpath:com/karate/openwhisk/wskadmin/get-user.feature');&#xA;var test=getNSCreds.Auth; &#xA;karate.set('authFunction',  'Basic '+getNSCreds.Auth);&#xA;karate.set('guid', getNSCreds.uuid[0]);&#xA;}   &#xA;else&#xA;{&#xA;var getGUID = base64decoding(test_user_key); &#xA;karate.set('authFunction' , 'Basic '+test_user_key);&#xA;karate.set('guid' , getGUID);&#xA;karate.log('I am here');&#xA;karate.log(getGUID);&#xA;}, &#xA;&#xA;status code was: 404, expected: 200, response time: 2078, url: https://3678a12b-fc64-4cef-ab97-d7b28c77fbe1-bluemix.cloudant.com:443/whisk_dev_subjects/bladerunner-test, response: {&#34;error&#34;:&#34;not_found&#34;,&#34;reason&#34;:&#34;missing&#34;}&#xA;&#x9;at com.intuit.karate.Script.evalFeatureCall(Script.java:1667)&#xA;&#x9;at com.intuit.karate.Script.call(Script.java:1599)&#xA;&#x9;at com.intuit.karate.Script.callWithCache(Script.java:183)&#xA;&#x9;at com.intuit.karate.Script.evalKarateExpression(Script.java:227)&#xA;&#x9;at com.intuit.karate.Script.evalKarateExpression(Script.java:171)&#xA;&#x9;at com.intuit.karate.Script.assign(Script.java:601)&#xA;&#x9;at com.intuit.karate.Script.assign(Script.java:527)&#xA;&#x9;at com.intuit.karate.StepDefs.def(StepDefs.java:309)&#xA;&#x9;at ✽.* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature')(/Users/rtripath/repo/OPENWHISK-KARATE/ow-karate/target/test-classes/com/karate/openwhisk/smoketests/TC05_SmokeTest_Trigger.feature:27)&#xA;">* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def scriptcode = call read('classpath:com/karate/openwhisk/functions/hello-world.js').passed
* def scriptcodeWithParam = call read('classpath:com/karate/openwhisk/functions/greetings.js').passed
* call [This feature file will either use the NS credentials provided or get the NS of guest] [This line is required please do not delete - or the functions cannot be called] classpath:com/karate/openwhisk/utils/get-auth.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def base64decoding = read('classpath:com/karate/openwhisk/utils/base64_decode.js').passed
* print "Start".............................................................passed
* call [Create Namespace] [Get NS credentials] classpath:com/karate/openwhisk/wskadmin/get-user.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
Given url AdminBaseUrl......................................................passed
* print "I am here in get-user".............................................passed
* def DBpath =..............................................................passed
And path DBpath+nameSpace...................................................passed
And header Authorization = AdminAuth........................................passed
And header Content-Type = 'application/json'................................passed
When method get.............................................................passed
Then status 200.............................................................failed
* eval......................................................................failed
* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature').failed
* def Auth = getAuth.Auth...................................................skipped
* print "Test case started --&gt; verify create and fire a trigger with a rule".skipped
* def createTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/create-trigger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def triggerName = createTrigger.trgrName..................................skipped
* match createTrigger.responseStatusCode == 200.............................skipped
* print "Successfully Created an trigger"...................................skipped
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcode)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def actionName = createAction.actName.....................................skipped
* match createAction.responseStatusCode == 200..............................skipped
* print "Successfully Created an action"....................................skipped
* def trgrName = '/'+nameSpace +'/'+triggerName.............................skipped
* def actName = '/'+nameSpace +'/'+actionName...............................skipped
* def createRule = call read('classpath:com/karate/openwhisk/wskrules/create-rule.feature') {triggerName:'#(trgrName)', actionName:'#(actName)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* match createRule.responseStatusCode == 200................................skipped
* print 'successfully created the rule'.....................................skipped
* def fireTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/fire-trigger.feature') {requestBody:'{"name":"Manoj","place":"Bangalore"}',nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',triggerName:'#(triggerName)'}.skipped
* def actID = fireTrigger.activationId......................................skipped
* print  = "Successfully fired the trigger".................................skipped
* def deleteTrigger = call read('classpath:com/karate/openwhisk/wsktriggers/delete-trigger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',triggerName:'#(triggerName)'}.skipped
* match deleteTrigger.responseStatusCode == 200.............................skipped
* print "Trigger got deleted"...............................................skipped
* print 'Test Case completed--&gt; verify create and fire a trigger with a rule'.skipped

StackTrace:
com.intuit.karate.exception.KarateException: 

javascript evaluation failed: if (!test_user_key)
{
var getNSCreds = karate.callSingle('classpath:com/karate/openwhisk/wskadmin/get-user.feature');
var test=getNSCreds.Auth; 
karate.set('authFunction',  'Basic '+getNSCreds.Auth);
karate.set('guid', getNSCreds.uuid[0]);
}   
else
{
var getGUID = base64decoding(test_user_key); 
karate.set('authFunction' , 'Basic '+test_user_key);
karate.set('guid' , getGUID);
karate.log('I am here');
karate.log(getGUID);
}, 

status code was: 404, expected: 200, response time: 2078, url: https://3678a12b-fc64-4cef-ab97-d7b28c77fbe1-bluemix.cloudant.com:443/whisk_dev_subjects/bladerunner-test, response: {"error":"not_found","reason":"missing"}
	at com.intuit.karate.Script.evalFeatureCall(Script.java:1667)
	at com.intuit.karate.Script.call(Script.java:1599)
	at com.intuit.karate.Script.callWithCache(Script.java:183)
	at com.intuit.karate.Script.evalKarateExpression(Script.java:227)
	at com.intuit.karate.Script.evalKarateExpression(Script.java:171)
	at com.intuit.karate.Script.assign(Script.java:601)
	at com.intuit.karate.Script.assign(Script.java:527)
	at com.intuit.karate.StepDefs.def(StepDefs.java:309)
	at ✽.* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature')(/Users/rtripath/repo/OPENWHISK-KARATE/ow-karate/target/test-classes/com/karate/openwhisk/smoketests/TC05_SmokeTest_Trigger.feature:27)
</failure>
   </testcase>
</testsuite>
