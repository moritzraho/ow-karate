[
  {
    "comments": [
      {
        "line": 1,
        "value": "#/*"
      },
      {
        "line": 2,
        "value": "#*  Copyright 2017-2018 Adobe."
      },
      {
        "line": 3,
        "value": "#*"
      },
      {
        "line": 4,
        "value": "#*  Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "line": 5,
        "value": "#*  you may not use this file except in compliance with the License."
      },
      {
        "line": 6,
        "value": "#*  You may obtain a copy of the License at"
      },
      {
        "line": 7,
        "value": "#*"
      },
      {
        "line": 8,
        "value": "#*          http://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "line": 9,
        "value": "#*"
      },
      {
        "line": 10,
        "value": "#*  Unless required by applicable law or agreed to in writing, software"
      },
      {
        "line": 11,
        "value": "#*  distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "line": 12,
        "value": "#*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "line": 13,
        "value": "#*  See the License for the specific language governing permissions and"
      },
      {
        "line": 14,
        "value": "#*  limitations under the License."
      },
      {
        "line": 15,
        "value": "#*/"
      },
      {
        "line": 16,
        "value": "#Author: rtripath@adobe.com"
      },
      {
        "line": 17,
        "value": "#Summary :This feature file will 1)Import the swagger file 2)Get the list of API\u0027s 3)Hit each API and assert on 200 OK"
      }
    ],
    "line": 21,
    "elements": [
      {
        "line": 23,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 773550247,
              "status": "passed"
            },
            "line": 24,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 24,
              "value": "13:59:58.663 karate.env system property was: null \n"
            }
          },
          {
            "result": {
              "duration": 1908209,
              "status": "passed"
            },
            "line": 25,
            "name": "def nameSpace \u003d \u0027guest\u0027",
            "match": {
              "arguments": [
                {
                  "val": "nameSpace",
                  "offset": 4
                },
                {
                  "val": "\u0027guest\u0027",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 3669200,
              "status": "passed"
            },
            "line": 26,
            "name": "def params \u003d \u0027?blocking\u003dtrue\u0026result\u003dfalse\u0027",
            "match": {
              "arguments": [
                {
                  "val": "params",
                  "offset": 4
                },
                {
                  "val": "\u0027?blocking\u003dtrue\u0026result\u003dfalse\u0027",
                  "offset": 13
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 14725536,
              "status": "passed"
            },
            "line": 27,
            "name": "def scriptcodeget \u003d call read(\u0027classpath:com/karate/openwhisk/functions/getResponse.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "scriptcodeget",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/functions/getResponse.js\u0027)",
                  "offset": 20
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 46869424,
              "status": "passed"
            },
            "line": 28,
            "name": "def scriptcodepost \u003d call read(\u0027classpath:com/karate/openwhisk/functions/postResponse.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "scriptcodepost",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/functions/postResponse.js\u0027)",
                  "offset": 21
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 10409633,
              "status": "passed"
            },
            "line": 29,
            "name": "def scriptcodeput \u003d call read(\u0027classpath:com/karate/openwhisk/functions/putResponse.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "scriptcodeput",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/functions/putResponse.js\u0027)",
                  "offset": 20
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 8119781,
              "status": "passed"
            },
            "line": 30,
            "name": "def scriptcodedelete \u003d call read(\u0027classpath:com/karate/openwhisk/functions/deleteResponse.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "scriptcodedelete",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/functions/deleteResponse.js\u0027)",
                  "offset": 23
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 1353072,
              "status": "passed"
            },
            "line": 31,
            "name": "def base64encoding \u003d read(\u0027classpath:com/karate/openwhisk/utils/base64.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "base64encoding",
                  "offset": 4
                },
                {
                  "val": "read(\u0027classpath:com/karate/openwhisk/utils/base64.js\u0027)",
                  "offset": 21
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 12199364,
              "status": "passed"
            },
            "line": 32,
            "name": "string raw_swagger \u003d read(\u0027classpath:com/karate/openwhisk/utils/pet-store-swagger.json\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "raw_swagger",
                  "offset": 7
                },
                {
                  "val": "read(\u0027classpath:com/karate/openwhisk/utils/pet-store-swagger.json\u0027)",
                  "offset": 21
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 2174304,
              "status": "passed"
            },
            "line": 33,
            "name": "def webAction \u003d \u0027true\u0027",
            "match": {
              "arguments": [
                {
                  "val": "webAction",
                  "offset": 4
                },
                {
                  "val": "\u0027true\u0027",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 51141748,
              "status": "passed"
            },
            "line": 34,
            "name": "table apis",
            "match": {
              "arguments": [
                {
                  "val": "apis",
                  "offset": 6
                }
              ],
              "location": "StepDefs.table(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "endpoint",
                  "methodtype"
                ],
                "line": 35
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet/test123\u0027",
                  "\u0027get\u0027"
                ],
                "line": 36
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet/test123\u0027",
                  "\u0027post\u0027"
                ],
                "line": 37
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet/test123\u0027",
                  "\u0027delete\u0027"
                ],
                "line": 38
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet\u0027",
                  "\u0027post\u0027"
                ],
                "line": 39
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet\u0027",
                  "\u0027put\u0027"
                ],
                "line": 40
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet/findByStatus\u0027",
                  "\u0027get\u0027"
                ],
                "line": 41
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/store/order\u0027",
                  "\u0027post\u0027"
                ],
                "line": 42
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/store/order/test234\u0027",
                  "\u0027get\u0027"
                ],
                "line": 43
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/store/order/test234\u0027",
                  "\u0027delete\u0027"
                ],
                "line": 44
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/logout\u0027",
                  "\u0027get\u0027"
                ],
                "line": 45
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user\u0027",
                  "\u0027post\u0027"
                ],
                "line": 46
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/login\u0027",
                  "\u0027get\u0027"
                ],
                "line": 47
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet/test123/uploadImage\u0027",
                  "\u0027post\u0027"
                ],
                "line": 48
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/createWithArray\u0027",
                  "\u0027post\u0027"
                ],
                "line": 49
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/pet/findByTags\u0027",
                  "\u0027get\u0027"
                ],
                "line": 50
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/store/inventory\u0027",
                  "\u0027get\u0027"
                ],
                "line": 51
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/createWithList\u0027",
                  "\u0027post\u0027"
                ],
                "line": 52
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/tester\u0027",
                  "\u0027get\u0027"
                ],
                "line": 53
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/tester\u0027",
                  "\u0027put\u0027"
                ],
                "line": 54
              },
              {
                "cells": [
                  "\u0027/apis/guest/v2/user/tester\u0027",
                  "\u0027delete\u0027"
                ],
                "line": 55
              }
            ],
            "keyword": "* "
          }
        ]
      },
      {
        "line": 59,
        "name": "TC03-As a user I want to import my swagger.json and see if my API gives a Two Hundred OK response",
        "description": "",
        "id": "this-feature-file-will-test-the-basic-api-management-functionality;tc03-as-a-user-i-want-to-import-my-swagger.json-and-see-if-my-api-gives-a-two-hundred-ok-response",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Create Namespace] [Get NS credentials] classpath:com/karate/openwhisk/wskadmin/get-user.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"nameSpace\": \"guest\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 24,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "def nameSpace \u003d \u0027guest\u0027",
            "match": {
              "arguments": [
                {
                  "val": "nameSpace",
                  "offset": 4
                },
                {
                  "val": "\u0027guest\u0027",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "def base64encoding \u003d read(\u0027classpath:com/karate/openwhisk/utils/base64.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "base64encoding",
                  "offset": 4
                },
                {
                  "val": "read(\u0027classpath:com/karate/openwhisk/utils/base64.js\u0027)",
                  "offset": 21
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "url AdminBaseUrl",
            "match": {
              "arguments": [
                {
                  "val": "AdminBaseUrl",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "print \"I am here in get-user\"",
            "match": {
              "arguments": [
                {
                  "val": "\"I am here in get-user\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "13:59:59.097 [print] I am here in get-user\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "def DBpath \u003d",
            "match": {
              "arguments": [
                {
                  "val": "DBpath",
                  "offset": 4
                }
              ],
              "location": "StepDefs.defDocString(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 33,
              "value": "\r\nif (BaseUrl.match (\u0027rtbeta\u0027))\r\n{\r\n DBpath \u003d \u0027/whisk_dev_subjects/\u0027;\r\n}\r\nelse{\r\n DBpath \u003d \u0027/local_subjects/\u0027;\r\n}\r\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#And path \u0027/whisk_local_subjects/\u0027+nameSpace"
              }
            ],
            "line": 45,
            "name": "path DBpath+nameSpace",
            "match": {
              "arguments": [
                {
                  "val": "DBpath+nameSpace",
                  "offset": 5
                }
              ],
              "location": "StepDefs.path(String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 46,
            "name": "header Authorization \u003d AdminAuth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "AdminAuth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 47,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 48,
            "name": "method get",
            "match": {
              "arguments": [
                {
                  "val": "get",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 48,
              "value": "13:59:59.152 request:\n1 \u003e GET https://whisk-couchdb-rtqe2-ue1-a.qe.adobe-runtime.com:443/local_subjects/guest\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic d2hpc2tfYWRtaW46YmxhZGVydW5PcHM\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: whisk-couchdb-rtqe2-ue1-a.qe.adobe-runtime.com:443\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:00.197 response time in milliseconds: 1043\n1 \u003c 200\n1 \u003c Cache-Control: must-revalidate\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 229\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:29:59 GMT\n1 \u003c ETag: \"1-cd503abe708f3950bdc8c76c2cfccf12\"\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Couch-Request-ID: 55cafbc7de\n1 \u003c X-CouchDB-Body-Time: 0\n1 \u003c X-Request-Id: texd26wkKIbRfP7mzNfREqxNS8OD7MYH\n{\"_id\":\"guest\",\"_rev\":\"1-cd503abe708f3950bdc8c76c2cfccf12\",\"namespaces\":[{\"name\":\"guest\",\"key\":\"123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP\",\"uuid\":\"23bc46b1-71f6-4ed5-8c54-816aa4f8c502\"}],\"subject\":\"guest\"}\n\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 49,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 50,
            "name": "string NScreds \u003d response",
            "match": {
              "arguments": [
                {
                  "val": "NScreds",
                  "offset": 7
                },
                {
                  "val": "response",
                  "offset": 17
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 51,
            "name": "def uuid \u003d $response.namespaces[*].uuid",
            "match": {
              "arguments": [
                {
                  "val": "uuid",
                  "offset": 4
                },
                {
                  "val": "$response.namespaces[*].uuid",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 52,
            "name": "def key \u003d $response.namespaces[*].key",
            "match": {
              "arguments": [
                {
                  "val": "key",
                  "offset": 4
                },
                {
                  "val": "$response.namespaces[*].key",
                  "offset": 10
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 53,
            "name": "def result \u003d uuid[0]+\u0027:\u0027+ key[0]",
            "match": {
              "arguments": [
                {
                  "val": "result",
                  "offset": 4
                },
                {
                  "val": "uuid[0]+\u0027:\u0027+ key[0]",
                  "offset": 13
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 54,
            "name": "def Auth \u003d base64encoding(result)",
            "match": {
              "arguments": [
                {
                  "val": "Auth",
                  "offset": 4
                },
                {
                  "val": "base64encoding(result)",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 55,
                "value": "#* def uuid \u003d $response.namespaces[*].uuid"
              }
            ],
            "line": 56,
            "name": "print result",
            "match": {
              "arguments": [
                {
                  "val": "result",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 56,
              "value": "14:00:00.265 [print] 23bc46b1-71f6-4ed5-8c54-816aa4f8c502:123zO3xZCLrMN6v2BKK1dXYFpXlPkccOFqm12CdAsMgRU4VrNZ9lyGVCGuMDGIwP\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 57,
            "name": "def FileUtil \u003d Java.type(\u0027com.karate.openwhisk.utils.OWFileUtil\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "FileUtil",
                  "offset": 4
                },
                {
                  "val": "Java.type(\u0027com.karate.openwhisk.utils.OWFileUtil\u0027)",
                  "offset": 15
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 58,
            "name": "string fileSaveResult \u003d FileUtil.writeToFile(Auth, \u0027authFile.txt\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "fileSaveResult",
                  "offset": 7
                },
                {
                  "val": "FileUtil.writeToFile(Auth, \u0027authFile.txt\u0027)",
                  "offset": 24
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 59,
            "name": "assert fileSaveResult \u003d\u003d \u0027success\u0027",
            "match": {
              "arguments": [
                {
                  "val": "fileSaveResult \u003d\u003d \u0027success\u0027",
                  "offset": 7
                }
              ],
              "location": "StepDefs.asssertBoolean(String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 1213272094,
              "status": "passed"
            },
            "comments": [
              {
                "line": 61,
                "value": "# Get User Guid \u0026 Auth"
              }
            ],
            "line": 62,
            "name": "def getNSCreds \u003d call read(\u0027classpath:com/karate/openwhisk/wskadmin/get-user.feature\u0027) {nameSpace:\u0027#(nameSpace)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "getNSCreds",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskadmin/get-user.feature\u0027) {nameSpace:\u0027#(nameSpace)\u0027}",
                  "offset": 17
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 7765774,
              "status": "passed"
            },
            "line": 63,
            "name": "def result \u003d getNSCreds.result",
            "match": {
              "arguments": [
                {
                  "val": "result",
                  "offset": 4
                },
                {
                  "val": "getNSCreds.result",
                  "offset": 13
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 6420886,
              "status": "passed"
            },
            "line": 64,
            "name": "def Auth \u003d base64encoding(result)",
            "match": {
              "arguments": [
                {
                  "val": "Auth",
                  "offset": 4
                },
                {
                  "val": "base64encoding(result)",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 3238769,
              "status": "passed"
            },
            "line": 65,
            "name": "def guid \u003d getNSCreds.uuid[0]",
            "match": {
              "arguments": [
                {
                  "val": "guid",
                  "offset": 4
                },
                {
                  "val": "getNSCreds.uuid[0]",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"script\": \"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n  \"actionName\": \"getResponse\",\n  \"webAction\": \"true\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 24,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#Create an Action"
              }
            ],
            "line": 30,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "\tif (typeof actionName \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027actionName\u0027, \u0027Testing\u0027+java.util.UUID.randomUUID());\r\n\t} else {\r\n\t\t\tkarate.set(\u0027actionName\u0027, actionName);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 39,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 40,
              "value": "\tif (typeof webAction \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027webAction\u0027, \u0027false\u0027);\r\n\t} else {\r\n\t\t\tkarate.set(\u0027webAction\u0027, \u0027true\u0027);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 48,
            "name": "def requestBody \u003d {\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
            "match": {
              "arguments": [
                {
                  "val": "requestBody",
                  "offset": 4
                },
                {
                  "val": "{\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
                  "offset": 18
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 49,
            "name": "string payload \u003d requestBody",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 7
                },
                {
                  "val": "requestBody",
                  "offset": 17
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 50,
            "name": "url BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 51,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 52,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 53,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 54,
            "name": "method put",
            "match": {
              "arguments": [
                {
                  "val": "put",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 54,
              "value": "14:00:00.380 request:\n1 \u003e PUT https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/getResponse?overwrite\u003dfalse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 392\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n{\"namespace\":\"guest\",\"name\":\"getResponse\",\"exec\":{\"kind\":\"nodejs:default\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\"},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}\n\n14:00:01.358 response time in milliseconds: 977\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 535\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:00 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [Xp0ZP0G5AECeDX0CHSVJhL8MS8VLxS2K, QCRgTnpOWo5wFi3qKu4pXZV8jSP9N9y1]\n1 \u003c X-Request-Id: [Xp0ZP0G5AECeDX0CHSVJhL8MS8VLxS2K, QCRgTnpOWo5wFi3qKu4pXZV8jSP9N9y1]\n{\"name\":\"getResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 55,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 56,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 56,
              "value": "14:00:01.360 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 57,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 58,
              "value": "if(responseStatusCode \u003d\u003d 200) {\r\n\t karate.log(\"Action Created\");\r\n\t }\r\nelse if(responseStatusCode \u003d\u003d 409){\r\n   karate.log(\"Duplicate Action\");\r\n   }"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 66,
                "value": "#* match responseStatusCode \u003d\u003d 200"
              }
            ],
            "line": 67,
            "name": "eval if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
            "match": {
              "arguments": [
                {
                  "val": "if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
                  "offset": 5
                }
              ],
              "location": "StepDefs.eval(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 67,
              "value": "14:00:01.362 Action Created \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 68,
            "name": "print \u0027Action name for the created action \u0027 + actName",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Action name for the created action \u0027 + actName",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 68,
              "value": "14:00:01.371 [print] Action name for the created action getResponse\n"
            }
          },
          {
            "result": {
              "duration": 1060596448,
              "status": "passed"
            },
            "comments": [
              {
                "line": 67,
                "value": "# Create an Action .Create an 4 actions for the above defined guest name.This will be used by the API\u0027s"
              }
            ],
            "line": 68,
            "name": "def createAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodeget)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027 , actionName: \u0027getResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "createAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodeget)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027 , actionName: \u0027getResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"script\": \"function main(params) {\\n    return {\\n        statusCode: 200,\\n        body: params,\\n        headers: {\\n            \\\"Cache-Control\\\": \\\"max-age\u003d60\\\"\\n        }\\n    }\\n}\\n\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n  \"actionName\": \"postResponse\",\n  \"webAction\": \"true\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 24,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#Create an Action"
              }
            ],
            "line": 30,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "\tif (typeof actionName \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027actionName\u0027, \u0027Testing\u0027+java.util.UUID.randomUUID());\r\n\t} else {\r\n\t\t\tkarate.set(\u0027actionName\u0027, actionName);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 39,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 40,
              "value": "\tif (typeof webAction \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027webAction\u0027, \u0027false\u0027);\r\n\t} else {\r\n\t\t\tkarate.set(\u0027webAction\u0027, \u0027true\u0027);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 48,
            "name": "def requestBody \u003d {\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
            "match": {
              "arguments": [
                {
                  "val": "requestBody",
                  "offset": 4
                },
                {
                  "val": "{\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
                  "offset": 18
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 49,
            "name": "string payload \u003d requestBody",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 7
                },
                {
                  "val": "requestBody",
                  "offset": 17
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 50,
            "name": "url BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 51,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 52,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 53,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 54,
            "name": "method put",
            "match": {
              "arguments": [
                {
                  "val": "put",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 54,
              "value": "14:00:01.435 request:\n1 \u003e PUT https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/postResponse?overwrite\u003dfalse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 374\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n{\"namespace\":\"guest\",\"name\":\"postResponse\",\"exec\":{\"kind\":\"nodejs:default\",\"code\":\"function main(params) {\\n    return {\\n        statusCode: 200,\\n        body: params,\\n        headers: {\\n            \\\"Cache-Control\\\": \\\"max-age\u003d60\\\"\\n        }\\n    }\\n}\\n\"},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}\n\n14:00:02.398 response time in milliseconds: 963\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 517\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:01 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [OZbE3U6FtPmkwQmWf6ImS3agkI8YGSVJ, SdM3bqauhyCycAze2F6gG2gTup2pKFn2]\n1 \u003c X-Request-Id: [OZbE3U6FtPmkwQmWf6ImS3agkI8YGSVJ, SdM3bqauhyCycAze2F6gG2gTup2pKFn2]\n{\"name\":\"postResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main(params) {\\n    return {\\n        statusCode: 200,\\n        body: params,\\n        headers: {\\n            \\\"Cache-Control\\\": \\\"max-age\u003d60\\\"\\n        }\\n    }\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 55,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 56,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 56,
              "value": "14:00:02.401 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 57,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 58,
              "value": "if(responseStatusCode \u003d\u003d 200) {\r\n\t karate.log(\"Action Created\");\r\n\t }\r\nelse if(responseStatusCode \u003d\u003d 409){\r\n   karate.log(\"Duplicate Action\");\r\n   }"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 66,
                "value": "#* match responseStatusCode \u003d\u003d 200"
              }
            ],
            "line": 67,
            "name": "eval if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
            "match": {
              "arguments": [
                {
                  "val": "if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
                  "offset": 5
                }
              ],
              "location": "StepDefs.eval(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 67,
              "value": "14:00:02.402 Action Created \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 68,
            "name": "print \u0027Action name for the created action \u0027 + actName",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Action name for the created action \u0027 + actName",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 68,
              "value": "14:00:02.406 [print] Action name for the created action postResponse\n"
            }
          },
          {
            "result": {
              "duration": 1034966937,
              "status": "passed"
            },
            "line": 69,
            "name": "def createAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodepost)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027, actionName: \u0027postResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "createAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodepost)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027, actionName: \u0027postResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"script\": \"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n  \"actionName\": \"putResponse\",\n  \"webAction\": \"true\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 24,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#Create an Action"
              }
            ],
            "line": 30,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "\tif (typeof actionName \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027actionName\u0027, \u0027Testing\u0027+java.util.UUID.randomUUID());\r\n\t} else {\r\n\t\t\tkarate.set(\u0027actionName\u0027, actionName);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 39,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 40,
              "value": "\tif (typeof webAction \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027webAction\u0027, \u0027false\u0027);\r\n\t} else {\r\n\t\t\tkarate.set(\u0027webAction\u0027, \u0027true\u0027);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 48,
            "name": "def requestBody \u003d {\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
            "match": {
              "arguments": [
                {
                  "val": "requestBody",
                  "offset": 4
                },
                {
                  "val": "{\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
                  "offset": 18
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 49,
            "name": "string payload \u003d requestBody",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 7
                },
                {
                  "val": "requestBody",
                  "offset": 17
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 50,
            "name": "url BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 51,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 52,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 53,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 54,
            "name": "method put",
            "match": {
              "arguments": [
                {
                  "val": "put",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 54,
              "value": "14:00:02.429 request:\n1 \u003e PUT https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/putResponse?overwrite\u003dfalse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 392\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n{\"namespace\":\"guest\",\"name\":\"putResponse\",\"exec\":{\"kind\":\"nodejs:default\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\"},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}\n\n14:00:03.373 response time in milliseconds: 943\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 535\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:02 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [ol9Fvk6tTf2XnPyUeLcBojQ9vHhSSGQb, xA9ksaHGcbitgftIFPKn9ANblaXhPfSo]\n1 \u003c X-Request-Id: [ol9Fvk6tTf2XnPyUeLcBojQ9vHhSSGQb, xA9ksaHGcbitgftIFPKn9ANblaXhPfSo]\n{\"name\":\"putResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 55,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 56,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 56,
              "value": "14:00:03.374 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 57,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 58,
              "value": "if(responseStatusCode \u003d\u003d 200) {\r\n\t karate.log(\"Action Created\");\r\n\t }\r\nelse if(responseStatusCode \u003d\u003d 409){\r\n   karate.log(\"Duplicate Action\");\r\n   }"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 66,
                "value": "#* match responseStatusCode \u003d\u003d 200"
              }
            ],
            "line": 67,
            "name": "eval if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
            "match": {
              "arguments": [
                {
                  "val": "if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
                  "offset": 5
                }
              ],
              "location": "StepDefs.eval(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 67,
              "value": "14:00:03.375 Action Created \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 68,
            "name": "print \u0027Action name for the created action \u0027 + actName",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Action name for the created action \u0027 + actName",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 68,
              "value": "14:00:03.376 [print] Action name for the created action putResponse\n"
            }
          },
          {
            "result": {
              "duration": 969447231,
              "status": "passed"
            },
            "line": 70,
            "name": "def createAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodeput)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027 , actionName: \u0027putResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "createAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodeput)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027 , actionName: \u0027putResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"script\": \"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n  \"actionName\": \"deleteResponse\",\n  \"webAction\": \"true\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 24,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "#Create an Action"
              }
            ],
            "line": 30,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "\tif (typeof actionName \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027actionName\u0027, \u0027Testing\u0027+java.util.UUID.randomUUID());\r\n\t} else {\r\n\t\t\tkarate.set(\u0027actionName\u0027, actionName);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 39,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 40,
              "value": "\tif (typeof webAction \u003d\u003d \u0027undefined\u0027) {\r\n\t    karate.set(\u0027webAction\u0027, \u0027false\u0027);\r\n\t} else {\r\n\t\t\tkarate.set(\u0027webAction\u0027, \u0027true\u0027);\r\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 48,
            "name": "def requestBody \u003d {\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
            "match": {
              "arguments": [
                {
                  "val": "requestBody",
                  "offset": 4
                },
                {
                  "val": "{\"namespace\":\u0027#(nameSpace)\u0027,\"name\":\u0027#(actionName)\u0027,\"exec\":{\"kind\":\"nodejs:default\",\"code\":\u0027#(script)\u0027},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}",
                  "offset": 18
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 49,
            "name": "string payload \u003d requestBody",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 7
                },
                {
                  "val": "requestBody",
                  "offset": 17
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 50,
            "name": "url BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName+\u0027?overwrite\u003dfalse\u0027",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 51,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 52,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 53,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 54,
            "name": "method put",
            "match": {
              "arguments": [
                {
                  "val": "put",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 54,
              "value": "14:00:03.392 request:\n1 \u003e PUT https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/deleteResponse?overwrite\u003dfalse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 395\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n{\"namespace\":\"guest\",\"name\":\"deleteResponse\",\"exec\":{\"kind\":\"nodejs:default\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\"},\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true}]}\n\n14:00:04.310 response time in milliseconds: 917\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 538\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:03 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [IRmKKTa9hyAiRfmjCW2AoyQurEuWrLhd, nsBqdw7rqkBIf42RTtbtnUtFKmYMgz5a]\n1 \u003c X-Request-Id: [IRmKKTa9hyAiRfmjCW2AoyQurEuWrLhd, nsBqdw7rqkBIf42RTtbtnUtFKmYMgz5a]\n{\"name\":\"deleteResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 55,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 56,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 56,
              "value": "14:00:04.311 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 57,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 58,
              "value": "if(responseStatusCode \u003d\u003d 200) {\r\n\t karate.log(\"Action Created\");\r\n\t }\r\nelse if(responseStatusCode \u003d\u003d 409){\r\n   karate.log(\"Duplicate Action\");\r\n   }"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 66,
                "value": "#* match responseStatusCode \u003d\u003d 200"
              }
            ],
            "line": 67,
            "name": "eval if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
            "match": {
              "arguments": [
                {
                  "val": "if(responseStatusCode \u003d\u003d 200) karate.set(\u0027actName\u0027, response.name )",
                  "offset": 5
                }
              ],
              "location": "StepDefs.eval(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 67,
              "value": "14:00:04.312 Action Created \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 68,
            "name": "print \u0027Action name for the created action \u0027 + actName",
            "match": {
              "arguments": [
                {
                  "val": "\u0027Action name for the created action \u0027 + actName",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 68,
              "value": "14:00:04.313 [print] Action name for the created action deleteResponse\n"
            }
          },
          {
            "result": {
              "duration": 936997656,
              "status": "passed"
            },
            "line": 71,
            "name": "def createAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodedelete)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027 ,actionName: \u0027deleteResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "createAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/create-action.feature\u0027) {script:\u0027#(scriptcodedelete)\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027 ,actionName: \u0027deleteResponse\u0027 , webAction: \u0027#(webAction)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 2231743,
              "status": "passed"
            },
            "line": 72,
            "name": "print \"Successfully Created the required actions\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Successfully Created the required actions\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 72,
              "value": "14:00:04.315 [print] Successfully Created the required actions\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Import Swagger.json] [Import Swagger.json from the utils and print the output as a string] classpath:com/karate/openwhisk/apimanagement/import-swagger.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n  \"guid\": \"23bc46b1-71f6-4ed5-8c54-816aa4f8c502\",\n  \"raw_swagger\": \"{\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"description\\\":\\\"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"title\\\":\\\"Swagger Petstore\\\",\\\"termsOfService\\\":\\\"http://swagger.io/terms/\\\",\\\"contact\\\":{\\\"email\\\":\\\"apiteam@swagger.io\\\"},\\\"license\\\":{\\\"name\\\":\\\"Apache 2.0\\\",\\\"url\\\":\\\"http://www.apache.org/licenses/LICENSE-2.0.html\\\"}},\\\"host\\\":\\\"petstore.swagger.io\\\",\\\"basePath\\\":\\\"/v2\\\",\\\"tags\\\":[{\\\"name\\\":\\\"pet\\\",\\\"description\\\":\\\"Everything about your Pets\\\",\\\"externalDocs\\\":{\\\"description\\\":\\\"Find out more\\\",\\\"url\\\":\\\"http://swagger.io\\\"}},{\\\"name\\\":\\\"store\\\",\\\"description\\\":\\\"Access to Petstore orders\\\"},{\\\"name\\\":\\\"user\\\",\\\"description\\\":\\\"Operations about user\\\",\\\"externalDocs\\\":{\\\"description\\\":\\\"Find out more about our store\\\",\\\"url\\\":\\\"http://swagger.io\\\"}}],\\\"schemes\\\":[\\\"http\\\"],\\\"paths\\\":{\\\"/pet\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Add a new pet to the store\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"consumes\\\":[\\\"application/json\\\",\\\"application/xml\\\"],\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Pet object that needs to be added to the store\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}],\\\"responses\\\":{\\\"405\\\":{\\\"description\\\":\\\"Invalid input\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]},\\\"put\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Update an existing pet\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"putResponse\\\",\\\"consumes\\\":[\\\"application/json\\\",\\\"application/xml\\\"],\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Pet object that needs to be added to the store\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Pet not found\\\"},\\\"405\\\":{\\\"description\\\":\\\"Validation exception\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/pet/findByStatus\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Finds Pets by status\\\",\\\"description\\\":\\\"Multiple status values can be provided with comma separated strings\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"status\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"Status values that need to be considered for filter\\\",\\\"required\\\":true,\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\",\\\"enum\\\":[\\\"available\\\",\\\"pending\\\",\\\"sold\\\"],\\\"default\\\":\\\"available\\\"},\\\"collectionFormat\\\":\\\"multi\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}},\\\"400\\\":{\\\"description\\\":\\\"Invalid status value\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/pet/findByTags\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Finds Pets by tags\\\",\\\"description\\\":\\\"Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"tags\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"Tags to filter by\\\",\\\"required\\\":true,\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"collectionFormat\\\":\\\"multi\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}},\\\"400\\\":{\\\"description\\\":\\\"Invalid tag value\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}],\\\"deprecated\\\":true}},\\\"/pet/{petId}\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Find pet by ID\\\",\\\"description\\\":\\\"Returns a single pet\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet to return\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Pet not found\\\"}},\\\"security\\\":[{\\\"api_key\\\":[]}]},\\\"post\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Updates a pet in the store with form data\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"consumes\\\":[\\\"application/x-www-form-urlencoded\\\"],\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet that needs to be updated\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},{\\\"name\\\":\\\"name\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"Updated name of the pet\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"status\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"Updated status of the pet\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"405\\\":{\\\"description\\\":\\\"Invalid input\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]},\\\"delete\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Deletes a pet\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"deleteResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"api_key\\\",\\\"in\\\":\\\"header\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"Pet id to delete\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Pet not found\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/pet/{petId}/uploadImage\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"uploads an image\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"consumes\\\":[\\\"multipart/form-data\\\"],\\\"produces\\\":[\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet to update\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},{\\\"name\\\":\\\"additionalMetadata\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"Additional data to pass to server\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"file\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"file to upload\\\",\\\"required\\\":false,\\\"type\\\":\\\"file\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/ApiResponse\\\"}}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/store/inventory\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Returns pet inventories by status\\\",\\\"description\\\":\\\"Returns a map of status codes to quantities\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"parameters\\\":[],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"additionalProperties\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}}},\\\"security\\\":[{\\\"api_key\\\":[]}]}},\\\"/store/order\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Place an order for a pet\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"order placed for purchasing the pet\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid Order\\\"}}}},\\\"/store/order/{orderId}\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Find purchase order by ID\\\",\\\"description\\\":\\\"For valid response try integer IDs with value \u003e\u003d 1 and \u003c\u003d 10.         Other values will generated exceptions\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"orderId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet that needs to be fetched\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"maximum\\\":10,\\\"minimum\\\":1,\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Order not found\\\"}}},\\\"delete\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Delete purchase order by ID\\\",\\\"description\\\":\\\"For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors\\\",\\\"operationId\\\":\\\"deleteResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"orderId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of the order that needs to be deleted\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"minimum\\\":1,\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Order not found\\\"}}}},\\\"/user\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Create user\\\",\\\"description\\\":\\\"This can only be done by the logged in user.\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Created user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/createWithArray\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Creates list of users with given input array\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"List of user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}}],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/createWithList\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Creates list of users with given input array\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"List of user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}}],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/login\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Logs user into the system\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"The user name for login\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"password\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"The password for login in clear text\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"},\\\"headers\\\":{\\\"X-Rate-Limit\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\",\\\"description\\\":\\\"calls per hour allowed by the user\\\"},\\\"X-Expires-After\\\":{\\\"type\\\":\\\"string\\\",\\\"format\\\":\\\"date-time\\\",\\\"description\\\":\\\"date in UTC when token expires\\\"}}},\\\"400\\\":{\\\"description\\\":\\\"Invalid username/password supplied\\\"}}}},\\\"/user/logout\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Logs out current logged in user session\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/{username}\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Get user by user name\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"The name that needs to be fetched. Use user1 for testing. \\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid username supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"User not found\\\"}}},\\\"put\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Updated user\\\",\\\"description\\\":\\\"This can only be done by the logged in user.\\\",\\\"operationId\\\":\\\"putResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"name that need to be updated\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"},{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Updated user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid user supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"User not found\\\"}}},\\\"delete\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Delete user\\\",\\\"description\\\":\\\"This can only be done by the logged in user.\\\",\\\"operationId\\\":\\\"deleteResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"The name that needs to be deleted\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid username supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"User not found\\\"}}}}},\\\"securityDefinitions\\\":{\\\"petstore_auth\\\":{\\\"type\\\":\\\"oauth2\\\",\\\"authorizationUrl\\\":\\\"http://petstore.swagger.io/oauth/dialog\\\",\\\"flow\\\":\\\"implicit\\\",\\\"scopes\\\":{\\\"write:pets\\\":\\\"modify pets in your account\\\",\\\"read:pets\\\":\\\"read your pets\\\"}},\\\"api_key\\\":{\\\"type\\\":\\\"apiKey\\\",\\\"name\\\":\\\"api_key\\\",\\\"in\\\":\\\"header\\\"}},\\\"definitions\\\":{\\\"Order\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"petId\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"shipDate\\\":{\\\"type\\\":\\\"string\\\",\\\"format\\\":\\\"date-time\\\"},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Order Status\\\",\\\"enum\\\":[\\\"placed\\\",\\\"approved\\\",\\\"delivered\\\"]},\\\"complete\\\":{\\\"type\\\":\\\"boolean\\\",\\\"default\\\":false}},\\\"xml\\\":{\\\"name\\\":\\\"Order\\\"}},\\\"Category\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Category\\\"}},\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"firstName\\\":{\\\"type\\\":\\\"string\\\"},\\\"lastName\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"},\\\"password\\\":{\\\"type\\\":\\\"string\\\"},\\\"phone\\\":{\\\"type\\\":\\\"string\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\",\\\"description\\\":\\\"User Status\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"User\\\"}},\\\"Tag\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Tag\\\"}},\\\"Pet\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"name\\\",\\\"photoUrls\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"category\\\":{\\\"$ref\\\":\\\"#/definitions/Category\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"example\\\":\\\"doggie\\\"},\\\"photoUrls\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"name\\\":\\\"photoUrl\\\",\\\"wrapped\\\":true},\\\"items\\\":{\\\"type\\\":\\\"string\\\"}},\\\"tags\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"name\\\":\\\"tag\\\",\\\"wrapped\\\":true},\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/Tag\\\"}},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"pet status in the store\\\",\\\"enum\\\":[\\\"available\\\",\\\"pending\\\",\\\"sold\\\"]}},\\\"xml\\\":{\\\"name\\\":\\\"Pet\\\"}},\\\"ApiResponse\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"type\\\":{\\\"type\\\":\\\"string\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"externalDocs\\\":{\\\"description\\\":\\\"Find out more about Swagger\\\",\\\"url\\\":\\\"http://swagger.io\\\"}}\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 22,
            "name": "def nameSpace \u003d \u0027guest\u0027",
            "match": {
              "arguments": [
                {
                  "val": "nameSpace",
                  "offset": 4
                },
                {
                  "val": "\u0027guest\u0027",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 23,
            "name": "def stringify \u003d  read(\u0027classpath:com/karate/openwhisk/utils/swagger-stringify.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "stringify",
                  "offset": 4
                },
                {
                  "val": " read(\u0027classpath:com/karate/openwhisk/utils/swagger-stringify.js\u0027)",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 24,
            "name": "def base64encoding \u003d read(\u0027classpath:com/karate/openwhisk/utils/base64.js\u0027)",
            "match": {
              "arguments": [
                {
                  "val": "base64encoding",
                  "offset": 4
                },
                {
                  "val": "read(\u0027classpath:com/karate/openwhisk/utils/base64.js\u0027)",
                  "offset": 21
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "comments": [
              {
                "line": 27,
                "value": "## Below can be passed to any request as a request"
              }
            ],
            "line": 28,
            "name": "def payload \u003d stringify(raw_swagger)",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 4
                },
                {
                  "val": "stringify(raw_swagger)",
                  "offset": 14
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "url BaseUrl + \u0027/api/v1/web/whisk.system/apimgmt/createApi.http?accesstoken\u003dDUMMY+TOKEN\u0026responsetype\u003djson\u0026spaceguid\u003d\u0027+guid",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + \u0027/api/v1/web/whisk.system/apimgmt/createApi.http?accesstoken\u003dDUMMY+TOKEN\u0026responsetype\u003djson\u0026spaceguid\u003d\u0027+guid",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 33,
            "name": "method post",
            "match": {
              "arguments": [
                {
                  "val": "post",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 33,
              "value": "14:00:04.378 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/web/whisk.system/apimgmt/createApi.http?accesstoken\u003dDUMMY+TOKEN\u0026responsetype\u003djson\u0026spaceguid\u003d23bc46b1-71f6-4ed5-8c54-816aa4f8c502\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 15764\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n{\"apidoc\":{\"namespace\":\"guest\",\"swagger\":\"{\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"description\\\":\\\"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\\\",\\\"version\\\":\\\"1.0.0\\\",\\\"title\\\":\\\"Swagger Petstore\\\",\\\"termsOfService\\\":\\\"http://swagger.io/terms/\\\",\\\"contact\\\":{\\\"email\\\":\\\"apiteam@swagger.io\\\"},\\\"license\\\":{\\\"name\\\":\\\"Apache 2.0\\\",\\\"url\\\":\\\"http://www.apache.org/licenses/LICENSE-2.0.html\\\"}},\\\"host\\\":\\\"petstore.swagger.io\\\",\\\"basePath\\\":\\\"/v2\\\",\\\"tags\\\":[{\\\"name\\\":\\\"pet\\\",\\\"description\\\":\\\"Everything about your Pets\\\",\\\"externalDocs\\\":{\\\"description\\\":\\\"Find out more\\\",\\\"url\\\":\\\"http://swagger.io\\\"}},{\\\"name\\\":\\\"store\\\",\\\"description\\\":\\\"Access to Petstore orders\\\"},{\\\"name\\\":\\\"user\\\",\\\"description\\\":\\\"Operations about user\\\",\\\"externalDocs\\\":{\\\"description\\\":\\\"Find out more about our store\\\",\\\"url\\\":\\\"http://swagger.io\\\"}}],\\\"schemes\\\":[\\\"http\\\"],\\\"paths\\\":{\\\"/pet\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Add a new pet to the store\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"consumes\\\":[\\\"application/json\\\",\\\"application/xml\\\"],\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Pet object that needs to be added to the store\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}],\\\"responses\\\":{\\\"405\\\":{\\\"description\\\":\\\"Invalid input\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]},\\\"put\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Update an existing pet\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"putResponse\\\",\\\"consumes\\\":[\\\"application/json\\\",\\\"application/xml\\\"],\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Pet object that needs to be added to the store\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Pet not found\\\"},\\\"405\\\":{\\\"description\\\":\\\"Validation exception\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/pet/findByStatus\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Finds Pets by status\\\",\\\"description\\\":\\\"Multiple status values can be provided with comma separated strings\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"status\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"Status values that need to be considered for filter\\\",\\\"required\\\":true,\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\",\\\"enum\\\":[\\\"available\\\",\\\"pending\\\",\\\"sold\\\"],\\\"default\\\":\\\"available\\\"},\\\"collectionFormat\\\":\\\"multi\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}},\\\"400\\\":{\\\"description\\\":\\\"Invalid status value\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/pet/findByTags\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Finds Pets by tags\\\",\\\"description\\\":\\\"Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"tags\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"Tags to filter by\\\",\\\"required\\\":true,\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"type\\\":\\\"string\\\"},\\\"collectionFormat\\\":\\\"multi\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}}},\\\"400\\\":{\\\"description\\\":\\\"Invalid tag value\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}],\\\"deprecated\\\":true}},\\\"/pet/{petId}\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Find pet by ID\\\",\\\"description\\\":\\\"Returns a single pet\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet to return\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Pet\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Pet not found\\\"}},\\\"security\\\":[{\\\"api_key\\\":[]}]},\\\"post\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Updates a pet in the store with form data\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"consumes\\\":[\\\"application/x-www-form-urlencoded\\\"],\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet that needs to be updated\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},{\\\"name\\\":\\\"name\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"Updated name of the pet\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"status\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"Updated status of the pet\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"405\\\":{\\\"description\\\":\\\"Invalid input\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]},\\\"delete\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"Deletes a pet\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"deleteResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"api_key\\\",\\\"in\\\":\\\"header\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"Pet id to delete\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Pet not found\\\"}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/pet/{petId}/uploadImage\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"pet\\\"],\\\"summary\\\":\\\"uploads an image\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"consumes\\\":[\\\"multipart/form-data\\\"],\\\"produces\\\":[\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"petId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet to update\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},{\\\"name\\\":\\\"additionalMetadata\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"Additional data to pass to server\\\",\\\"required\\\":false,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"file\\\",\\\"in\\\":\\\"formData\\\",\\\"description\\\":\\\"file to upload\\\",\\\"required\\\":false,\\\"type\\\":\\\"file\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/ApiResponse\\\"}}},\\\"security\\\":[{\\\"petstore_auth\\\":[\\\"write:pets\\\",\\\"read:pets\\\"]}]}},\\\"/store/inventory\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Returns pet inventories by status\\\",\\\"description\\\":\\\"Returns a map of status codes to quantities\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/json\\\"],\\\"parameters\\\":[],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"object\\\",\\\"additionalProperties\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"}}}},\\\"security\\\":[{\\\"api_key\\\":[]}]}},\\\"/store/order\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Place an order for a pet\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"order placed for purchasing the pet\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"}}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid Order\\\"}}}},\\\"/store/order/{orderId}\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Find purchase order by ID\\\",\\\"description\\\":\\\"For valid response try integer IDs with value \u003e\u003d 1 and \u003c\u003d 10.         Other values will generated exceptions\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"orderId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of pet that needs to be fetched\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"maximum\\\":10,\\\"minimum\\\":1,\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Order not found\\\"}}},\\\"delete\\\":{\\\"tags\\\":[\\\"store\\\"],\\\"summary\\\":\\\"Delete purchase order by ID\\\",\\\"description\\\":\\\"For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors\\\",\\\"operationId\\\":\\\"deleteResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"orderId\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"ID of the order that needs to be deleted\\\",\\\"required\\\":true,\\\"type\\\":\\\"integer\\\",\\\"minimum\\\":1,\\\"format\\\":\\\"int64\\\"}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid ID supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"Order not found\\\"}}}},\\\"/user\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Create user\\\",\\\"description\\\":\\\"This can only be done by the logged in user.\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Created user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/createWithArray\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Creates list of users with given input array\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"List of user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}}],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/createWithList\\\":{\\\"post\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Creates list of users with given input array\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"postResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"List of user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"type\\\":\\\"array\\\",\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}}],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/login\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Logs user into the system\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"The user name for login\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"password\\\",\\\"in\\\":\\\"query\\\",\\\"description\\\":\\\"The password for login in clear text\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"type\\\":\\\"string\\\"},\\\"headers\\\":{\\\"X-Rate-Limit\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\",\\\"description\\\":\\\"calls per hour allowed by the user\\\"},\\\"X-Expires-After\\\":{\\\"type\\\":\\\"string\\\",\\\"format\\\":\\\"date-time\\\",\\\"description\\\":\\\"date in UTC when token expires\\\"}}},\\\"400\\\":{\\\"description\\\":\\\"Invalid username/password supplied\\\"}}}},\\\"/user/logout\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Logs out current logged in user session\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[],\\\"responses\\\":{\\\"default\\\":{\\\"description\\\":\\\"successful operation\\\"}}}},\\\"/user/{username}\\\":{\\\"get\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Get user by user name\\\",\\\"description\\\":\\\"\\\",\\\"operationId\\\":\\\"getResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"The name that needs to be fetched. Use user1 for testing. \\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"successful operation\\\",\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}},\\\"400\\\":{\\\"description\\\":\\\"Invalid username supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"User not found\\\"}}},\\\"put\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Updated user\\\",\\\"description\\\":\\\"This can only be done by the logged in user.\\\",\\\"operationId\\\":\\\"putResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"name that need to be updated\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"},{\\\"in\\\":\\\"body\\\",\\\"name\\\":\\\"body\\\",\\\"description\\\":\\\"Updated user object\\\",\\\"required\\\":true,\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/User\\\"}}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid user supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"User not found\\\"}}},\\\"delete\\\":{\\\"tags\\\":[\\\"user\\\"],\\\"summary\\\":\\\"Delete user\\\",\\\"description\\\":\\\"This can only be done by the logged in user.\\\",\\\"operationId\\\":\\\"deleteResponse\\\",\\\"produces\\\":[\\\"application/xml\\\",\\\"application/json\\\"],\\\"parameters\\\":[{\\\"name\\\":\\\"username\\\",\\\"in\\\":\\\"path\\\",\\\"description\\\":\\\"The name that needs to be deleted\\\",\\\"required\\\":true,\\\"type\\\":\\\"string\\\"}],\\\"responses\\\":{\\\"400\\\":{\\\"description\\\":\\\"Invalid username supplied\\\"},\\\"404\\\":{\\\"description\\\":\\\"User not found\\\"}}}}},\\\"securityDefinitions\\\":{\\\"petstore_auth\\\":{\\\"type\\\":\\\"oauth2\\\",\\\"authorizationUrl\\\":\\\"http://petstore.swagger.io/oauth/dialog\\\",\\\"flow\\\":\\\"implicit\\\",\\\"scopes\\\":{\\\"write:pets\\\":\\\"modify pets in your account\\\",\\\"read:pets\\\":\\\"read your pets\\\"}},\\\"api_key\\\":{\\\"type\\\":\\\"apiKey\\\",\\\"name\\\":\\\"api_key\\\",\\\"in\\\":\\\"header\\\"}},\\\"definitions\\\":{\\\"Order\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"petId\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"shipDate\\\":{\\\"type\\\":\\\"string\\\",\\\"format\\\":\\\"date-time\\\"},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"Order Status\\\",\\\"enum\\\":[\\\"placed\\\",\\\"approved\\\",\\\"delivered\\\"]},\\\"complete\\\":{\\\"type\\\":\\\"boolean\\\",\\\"default\\\":false}},\\\"xml\\\":{\\\"name\\\":\\\"Order\\\"}},\\\"Category\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Category\\\"}},\\\"User\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"username\\\":{\\\"type\\\":\\\"string\\\"},\\\"firstName\\\":{\\\"type\\\":\\\"string\\\"},\\\"lastName\\\":{\\\"type\\\":\\\"string\\\"},\\\"email\\\":{\\\"type\\\":\\\"string\\\"},\\\"password\\\":{\\\"type\\\":\\\"string\\\"},\\\"phone\\\":{\\\"type\\\":\\\"string\\\"},\\\"userStatus\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\",\\\"description\\\":\\\"User Status\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"User\\\"}},\\\"Tag\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"}},\\\"xml\\\":{\\\"name\\\":\\\"Tag\\\"}},\\\"Pet\\\":{\\\"type\\\":\\\"object\\\",\\\"required\\\":[\\\"name\\\",\\\"photoUrls\\\"],\\\"properties\\\":{\\\"id\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int64\\\"},\\\"category\\\":{\\\"$ref\\\":\\\"#/definitions/Category\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\",\\\"example\\\":\\\"doggie\\\"},\\\"photoUrls\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"name\\\":\\\"photoUrl\\\",\\\"wrapped\\\":true},\\\"items\\\":{\\\"type\\\":\\\"string\\\"}},\\\"tags\\\":{\\\"type\\\":\\\"array\\\",\\\"xml\\\":{\\\"name\\\":\\\"tag\\\",\\\"wrapped\\\":true},\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/Tag\\\"}},\\\"status\\\":{\\\"type\\\":\\\"string\\\",\\\"description\\\":\\\"pet status in the store\\\",\\\"enum\\\":[\\\"available\\\",\\\"pending\\\",\\\"sold\\\"]}},\\\"xml\\\":{\\\"name\\\":\\\"Pet\\\"}},\\\"ApiResponse\\\":{\\\"type\\\":\\\"object\\\",\\\"properties\\\":{\\\"code\\\":{\\\"type\\\":\\\"integer\\\",\\\"format\\\":\\\"int32\\\"},\\\"type\\\":{\\\"type\\\":\\\"string\\\"},\\\"message\\\":{\\\"type\\\":\\\"string\\\"}}}},\\\"externalDocs\\\":{\\\"description\\\":\\\"Find out more about Swagger\\\",\\\"url\\\":\\\"http://swagger.io\\\"}}\"}}\n\n14:00:11.363 response time in milliseconds: 6904\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 27912\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:10 GMT\n1 \u003c Perf-Br-Resp-Out: 1533717010.221\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: HbLHp32D0IzfmwM6rtwVpN7lInD1svHp\n{\n  \"gwApiUrl\": \"https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com:443/apis/guest/v2\",\n  \"gwApiActivated\": true,\n  \"tenantId\": \"Not Used\",\n  \"apidoc\": {\n    \"tags\": [{\n      \"description\": \"Everything about your Pets\",\n      \"externalDocs\": {\n        \"description\": \"Find out more\",\n        \"url\": \"http://swagger.io\"\n      },\n      \"name\": \"pet\"\n    }, {\n      \"description\": \"Access to Petstore orders\",\n      \"name\": \"store\"\n    }, {\n      \"description\": \"Operations about user\",\n      \"externalDocs\": {\n        \"description\": \"Find out more about our store\",\n        \"url\": \"http://swagger.io\"\n      },\n      \"name\": \"user\"\n    }],\n    \"host\": \"petstore.swagger.io\",\n    \"securityDefinitions\": {\n      \"api_key\": {\n        \"in\": \"header\",\n        \"name\": \"api_key\",\n        \"type\": \"apiKey\"\n      },\n      \"petstore_auth\": {\n        \"authorizationUrl\": \"http://petstore.swagger.io/oauth/dialog\",\n        \"flow\": \"implicit\",\n        \"scopes\": {\n          \"read:pets\": \"read your pets\",\n          \"write:pets\": \"modify pets in your account\"\n        },\n        \"type\": \"oauth2\"\n      }\n    },\n    \"paths\": {\n      \"/store/order\": {\n        \"post\": {\n          \"description\": \"\",\n          \"tags\": [\"store\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"order placed for purchasing the pet\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Order\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Place an order for a pet\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"$ref\": \"#/definitions/Order\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid Order\"\n            }\n          }\n        }\n      },\n      \"/pet/findByTags\": {\n        \"get\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.\",\n          \"tags\": [\"pet\"],\n          \"deprecated\": true,\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"tags\",\n            \"in\": \"query\",\n            \"description\": \"Tags to filter by\",\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"collectionFormat\": \"multi\",\n            \"type\": \"array\",\n            \"required\": true\n          }],\n          \"summary\": \"Finds Pets by tags\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/definitions/Pet\"\n                },\n                \"type\": \"array\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid tag value\"\n            }\n          }\n        }\n      },\n      \"/pet\": {\n        \"post\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"consumes\": [\"application/json\", \"application/xml\"],\n          \"parameters\": [{\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"Pet object that needs to be added to the store\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Pet\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Add a new pet to the store\",\n          \"responses\": {\n            \"405\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        },\n        \"put\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/putResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"putResponse\"\n          },\n          \"consumes\": [\"application/json\", \"application/xml\"],\n          \"parameters\": [{\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"Pet object that needs to be added to the store\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Pet\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Update an existing pet\",\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid ID supplied\"\n            },\n            \"404\": {\n              \"description\": \"Pet not found\"\n            },\n            \"405\": {\n              \"description\": \"Validation exception\"\n            }\n          }\n        }\n      },\n      \"/store/order/{orderId}\": {\n        \"delete\": {\n          \"description\": \"For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors\",\n          \"tags\": [\"store\"],\n          \"operationId\": \"guest/default/deleteResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"deleteResponse\"\n          },\n          \"parameters\": [{\n            \"format\": \"int64\",\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of the order that needs to be deleted\",\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"required\": true\n          }],\n          \"summary\": \"Delete purchase order by ID\",\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid ID supplied\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        },\n        \"get\": {\n          \"description\": \"For valid response try integer IDs with value \u003e\u003d 1 and \u003c\u003d 10.         Other values will generated exceptions\",\n          \"tags\": [\"store\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [{\n            \"format\": \"int64\",\n            \"name\": \"orderId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be fetched\",\n            \"maximum\": 10,\n            \"minimum\": 1,\n            \"type\": \"integer\",\n            \"required\": true\n          }],\n          \"summary\": \"Find purchase order by ID\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"$ref\": \"#/definitions/Order\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid ID supplied\"\n            },\n            \"404\": {\n              \"description\": \"Order not found\"\n            }\n          }\n        }\n      },\n      \"/user/logout\": {\n        \"get\": {\n          \"description\": \"\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [],\n          \"summary\": \"Logs out current logged in user session\",\n          \"responses\": {\n            \"default\": {\n              \"description\": \"successful operation\"\n            }\n          }\n        }\n      },\n      \"/store/inventory\": {\n        \"get\": {\n          \"security\": [{\n            \"api_key\": []\n          }],\n          \"description\": \"Returns a map of status codes to quantities\",\n          \"tags\": [\"store\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [],\n          \"summary\": \"Returns pet inventories by status\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"additionalProperties\": {\n                  \"format\": \"int32\",\n                  \"type\": \"integer\"\n                },\n                \"type\": \"object\"\n              }\n            }\n          }\n        }\n      },\n      \"/user/createWithList\": {\n        \"post\": {\n          \"description\": \"\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"List of user object\",\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/definitions/User\"\n              },\n              \"type\": \"array\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Creates list of users with given input array\",\n          \"responses\": {\n            \"default\": {\n              \"description\": \"successful operation\"\n            }\n          }\n        }\n      },\n      \"/user/{username}\": {\n        \"delete\": {\n          \"description\": \"This can only be done by the logged in user.\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/deleteResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"deleteResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be deleted\",\n            \"type\": \"string\",\n            \"required\": true\n          }],\n          \"summary\": \"Delete user\",\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid username supplied\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        },\n        \"get\": {\n          \"description\": \"\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n            \"type\": \"string\",\n            \"required\": true\n          }],\n          \"summary\": \"Get user by user name\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"$ref\": \"#/definitions/User\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid username supplied\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        },\n        \"put\": {\n          \"description\": \"This can only be done by the logged in user.\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/putResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"putResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"username\",\n            \"in\": \"path\",\n            \"description\": \"name that need to be updated\",\n            \"type\": \"string\",\n            \"required\": true\n          }, {\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"Updated user object\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/User\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Updated user\",\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid user supplied\"\n            },\n            \"404\": {\n              \"description\": \"User not found\"\n            }\n          }\n        }\n      },\n      \"/user/login\": {\n        \"get\": {\n          \"description\": \"\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"username\",\n            \"in\": \"query\",\n            \"description\": \"The user name for login\",\n            \"type\": \"string\",\n            \"required\": true\n          }, {\n            \"name\": \"password\",\n            \"in\": \"query\",\n            \"description\": \"The password for login in clear text\",\n            \"type\": \"string\",\n            \"required\": true\n          }],\n          \"summary\": \"Logs user into the system\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"headers\": {\n                \"X-Expires-After\": {\n                  \"description\": \"date in UTC when token expires\",\n                  \"format\": \"date-time\",\n                  \"type\": \"string\"\n                },\n                \"X-Rate-Limit\": {\n                  \"description\": \"calls per hour allowed by the user\",\n                  \"format\": \"int32\",\n                  \"type\": \"integer\"\n                }\n              },\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid username/password supplied\"\n            }\n          }\n        }\n      },\n      \"/user\": {\n        \"post\": {\n          \"description\": \"This can only be done by the logged in user.\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"Created user object\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/User\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Create user\",\n          \"responses\": {\n            \"default\": {\n              \"description\": \"successful operation\"\n            }\n          }\n        }\n      },\n      \"/pet/{petId}\": {\n        \"delete\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/deleteResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"deleteResponse\"\n          },\n          \"parameters\": [{\n            \"in\": \"header\",\n            \"name\": \"api_key\",\n            \"required\": false,\n            \"type\": \"string\"\n          }, {\n            \"format\": \"int64\",\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"Pet id to delete\",\n            \"type\": \"integer\",\n            \"required\": true\n          }],\n          \"summary\": \"Deletes a pet\",\n          \"responses\": {\n            \"400\": {\n              \"description\": \"Invalid ID supplied\"\n            },\n            \"404\": {\n              \"description\": \"Pet not found\"\n            }\n          }\n        },\n        \"get\": {\n          \"security\": [{\n            \"api_key\": []\n          }],\n          \"description\": \"Returns a single pet\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [{\n            \"format\": \"int64\",\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to return\",\n            \"type\": \"integer\",\n            \"required\": true\n          }],\n          \"summary\": \"Find pet by ID\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"$ref\": \"#/definitions/Pet\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid ID supplied\"\n            },\n            \"404\": {\n              \"description\": \"Pet not found\"\n            }\n          }\n        },\n        \"post\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"consumes\": [\"application/x-www-form-urlencoded\"],\n          \"parameters\": [{\n            \"format\": \"int64\",\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet that needs to be updated\",\n            \"type\": \"integer\",\n            \"required\": true\n          }, {\n            \"name\": \"name\",\n            \"in\": \"formData\",\n            \"description\": \"Updated name of the pet\",\n            \"type\": \"string\",\n            \"required\": false\n          }, {\n            \"name\": \"status\",\n            \"in\": \"formData\",\n            \"description\": \"Updated status of the pet\",\n            \"type\": \"string\",\n            \"required\": false\n          }],\n          \"summary\": \"Updates a pet in the store with form data\",\n          \"responses\": {\n            \"405\": {\n              \"description\": \"Invalid input\"\n            }\n          }\n        }\n      },\n      \"/pet/{petId}/uploadImage\": {\n        \"post\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"consumes\": [\"multipart/form-data\"],\n          \"parameters\": [{\n            \"format\": \"int64\",\n            \"name\": \"petId\",\n            \"in\": \"path\",\n            \"description\": \"ID of pet to update\",\n            \"type\": \"integer\",\n            \"required\": true\n          }, {\n            \"name\": \"additionalMetadata\",\n            \"in\": \"formData\",\n            \"description\": \"Additional data to pass to server\",\n            \"type\": \"string\",\n            \"required\": false\n          }, {\n            \"name\": \"file\",\n            \"in\": \"formData\",\n            \"description\": \"file to upload\",\n            \"type\": \"file\",\n            \"required\": false\n          }],\n          \"summary\": \"uploads an image\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"$ref\": \"#/definitions/ApiResponse\"\n              }\n            }\n          }\n        }\n      },\n      \"/user/createWithArray\": {\n        \"post\": {\n          \"description\": \"\",\n          \"tags\": [\"user\"],\n          \"operationId\": \"guest/default/postResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"postResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"body\",\n            \"in\": \"body\",\n            \"description\": \"List of user object\",\n            \"schema\": {\n              \"items\": {\n                \"$ref\": \"#/definitions/User\"\n              },\n              \"type\": \"array\"\n            },\n            \"required\": true\n          }],\n          \"summary\": \"Creates list of users with given input array\",\n          \"responses\": {\n            \"default\": {\n              \"description\": \"successful operation\"\n            }\n          }\n        }\n      },\n      \"/pet/findByStatus\": {\n        \"get\": {\n          \"security\": [{\n            \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n          }],\n          \"description\": \"Multiple status values can be provided with comma separated strings\",\n          \"tags\": [\"pet\"],\n          \"operationId\": \"guest/default/getResponse\",\n          \"produces\": [\"application/xml\", \"application/json\"],\n          \"x-openwhisk\": {\n            \"url\": \"not-used\",\n            \"namespace\": \"guest\",\n            \"package\": \"default\",\n            \"action\": \"getResponse\"\n          },\n          \"parameters\": [{\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"description\": \"Status values that need to be considered for filter\",\n            \"items\": {\n              \"default\": \"available\",\n              \"enum\": [\"available\", \"pending\", \"sold\"],\n              \"type\": \"string\"\n            },\n            \"collectionFormat\": \"multi\",\n            \"type\": \"array\",\n            \"required\": true\n          }],\n          \"summary\": \"Finds Pets by status\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"successful operation\",\n              \"schema\": {\n                \"items\": {\n                  \"$ref\": \"#/definitions/Pet\"\n                },\n                \"type\": \"array\"\n              }\n            },\n            \"400\": {\n              \"description\": \"Invalid status value\"\n            }\n          }\n        }\n      }\n    },\n    \"basePath\": \"/v2\",\n    \"info\": {\n      \"description\": \"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\",\n      \"contact\": {\n        \"email\": \"apiteam@swagger.io\"\n      },\n      \"license\": {\n        \"name\": \"Apache 2.0\",\n        \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n      },\n      \"termsOfService\": \"http://swagger.io/terms/\",\n      \"version\": \"1.0.0\",\n      \"title\": \"Swagger Petstore\"\n    },\n    \"schemes\": [\"http\"],\n    \"definitions\": {\n      \"Pet\": {\n        \"properties\": {\n          \"name\": {\n            \"example\": \"doggie\",\n            \"type\": \"string\"\n          },\n          \"tags\": {\n            \"items\": {\n              \"$ref\": \"#/definitions/Tag\"\n            },\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"tag\",\n              \"wrapped\": true\n            }\n          },\n          \"photoUrls\": {\n            \"items\": {\n              \"type\": \"string\"\n            },\n            \"type\": \"array\",\n            \"xml\": {\n              \"name\": \"photoUrl\",\n              \"wrapped\": true\n            }\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"status\": {\n            \"description\": \"pet status in the store\",\n            \"enum\": [\"available\", \"pending\", \"sold\"],\n            \"type\": \"string\"\n          },\n          \"category\": {\n            \"$ref\": \"#/definitions/Category\"\n          }\n        },\n        \"required\": [\"name\", \"photoUrls\"],\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Pet\"\n        }\n      },\n      \"Category\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Category\"\n        }\n      },\n      \"Tag\": {\n        \"properties\": {\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Tag\"\n        }\n      },\n      \"User\": {\n        \"properties\": {\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"userStatus\": {\n            \"description\": \"User Status\",\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"lastName\": {\n            \"type\": \"string\"\n          },\n          \"firstName\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"phone\": {\n            \"type\": \"string\"\n          },\n          \"password\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"User\"\n        }\n      },\n      \"Order\": {\n        \"properties\": {\n          \"shipDate\": {\n            \"format\": \"date-time\",\n            \"type\": \"string\"\n          },\n          \"quantity\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"petId\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"id\": {\n            \"format\": \"int64\",\n            \"type\": \"integer\"\n          },\n          \"complete\": {\n            \"default\": false,\n            \"type\": \"boolean\"\n          },\n          \"status\": {\n            \"description\": \"Order Status\",\n            \"enum\": [\"placed\", \"approved\", \"delivered\"],\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\",\n        \"xml\": {\n          \"name\": \"Order\"\n        }\n      },\n      \"ApiResponse\": {\n        \"properties\": {\n          \"code\": {\n            \"format\": \"int32\",\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          }\n        },\n        \"type\": \"object\"\n      }\n    },\n    \"swagger\": \"2.0\",\n    \"externalDocs\": {\n      \"description\": \"Find out more about Swagger\",\n      \"url\": \"http://swagger.io\"\n    }\n  },\n  \"namespace\": \"Not Used\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 34,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7048848605,
              "status": "passed"
            },
            "comments": [
              {
                "line": 74,
                "value": "# Call the import Swagger feature file and import the swagger"
              }
            ],
            "line": 75,
            "name": "def importSwagger \u003d call read(\u0027classpath:com/karate/openwhisk/apimanagement/import-swagger.feature\u0027) {nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027,guid:\u0027#(guid)\u0027 , raw_swagger: \u0027#(raw_swagger)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "importSwagger",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/apimanagement/import-swagger.feature\u0027) {nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027,guid:\u0027#(guid)\u0027 , raw_swagger: \u0027#(raw_swagger)\u0027}",
                  "offset": 20
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 2098243,
              "status": "passed"
            },
            "line": 76,
            "name": "print \"Successfully imported the swagger\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Successfully imported the swagger\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 76,
              "value": "14:00:11.367 [print] Successfully imported the swagger\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [The feature gets the list of API\u0027s from the input base path.This Feature can be run standalone or in sequence with other tests] [Import Swagger.json from the utils and print the output as a string] classpath:com/karate/openwhisk/apimanagement/get-api-list.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"guid\": \"23bc46b1-71f6-4ed5-8c54-816aa4f8c502\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 22,
            "name": "def nameSpace \u003d \u0027guest\u0027",
            "match": {
              "arguments": [
                {
                  "val": "nameSpace",
                  "offset": 4
                },
                {
                  "val": "\u0027guest\u0027",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "url BaseUrl + \u0027/api/v1/web/whisk.system/apimgmt/getApi.http?accesstoken\u003dDUMMY+TOKEN\u0026basepath\u003dv2\u0027+ \u0027\u0026spaceguid\u003d\u0027+guid",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + \u0027/api/v1/web/whisk.system/apimgmt/getApi.http?accesstoken\u003dDUMMY+TOKEN\u0026basepath\u003dv2\u0027+ \u0027\u0026spaceguid\u003d\u0027+guid",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "method get",
            "match": {
              "arguments": [
                {
                  "val": "get",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "14:00:11.388 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/web/whisk.system/apimgmt/getApi.http?accesstoken\u003dDUMMY+TOKEN\u0026basepath\u003dv2\u0026spaceguid\u003d23bc46b1-71f6-4ed5-8c54-816aa4f8c502\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:13.872 response time in milliseconds: 2264\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 31743\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:12 GMT\n1 \u003c Perf-Br-Resp-Out: 1533717012.638\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: raZPznfZEKhCP2RVnxUaenmTPR0jvMaX\n{\n  \"apis\": [{\n    \"value\": {\n      \"gwApiUrl\": \"https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com:443/apis/guest/v2\",\n      \"gwApiActivated\": true,\n      \"tenantId\": \"Not Used\",\n      \"apidoc\": {\n        \"tags\": [{\n          \"name\": \"pet\",\n          \"description\": \"Everything about your Pets\",\n          \"externalDocs\": {\n            \"description\": \"Find out more\",\n            \"url\": \"http://swagger.io\"\n          }\n        }, {\n          \"name\": \"store\",\n          \"description\": \"Access to Petstore orders\"\n        }, {\n          \"name\": \"user\",\n          \"description\": \"Operations about user\",\n          \"externalDocs\": {\n            \"description\": \"Find out more about our store\",\n            \"url\": \"http://swagger.io\"\n          }\n        }],\n        \"host\": \"petstore.swagger.io\",\n        \"securityDefinitions\": {\n          \"petstore_auth\": {\n            \"type\": \"oauth2\",\n            \"authorizationUrl\": \"http://petstore.swagger.io/oauth/dialog\",\n            \"flow\": \"implicit\",\n            \"scopes\": {\n              \"write:pets\": \"modify pets in your account\",\n              \"read:pets\": \"read your pets\"\n            }\n          },\n          \"api_key\": {\n            \"type\": \"apiKey\",\n            \"name\": \"api_key\",\n            \"in\": \"header\"\n          }\n        },\n        \"paths\": {\n          \"/store/order\": {\n            \"post\": {\n              \"description\": \"\",\n              \"tags\": [\"store\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"order placed for purchasing the pet\",\n                \"schema\": {\n                  \"$ref\": \"#/definitions/Order\"\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Place an order for a pet\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"$ref\": \"#/definitions/Order\"\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid Order\"\n                }\n              }\n            }\n          },\n          \"/pet/findByTags\": {\n            \"get\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.\",\n              \"tags\": [\"pet\"],\n              \"deprecated\": true,\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"tags\",\n                \"in\": \"query\",\n                \"description\": \"Tags to filter by\",\n                \"items\": {\n                  \"type\": \"string\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"type\": \"array\",\n                \"required\": true\n              }],\n              \"summary\": \"Finds Pets by tags\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/definitions/Pet\"\n                    }\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid tag value\"\n                }\n              }\n            }\n          },\n          \"/pet\": {\n            \"post\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"consumes\": [\"application/json\", \"application/xml\"],\n              \"parameters\": [{\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"schema\": {\n                  \"$ref\": \"#/definitions/Pet\"\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Add a new pet to the store\",\n              \"responses\": {\n                \"405\": {\n                  \"description\": \"Invalid input\"\n                }\n              }\n            },\n            \"put\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/putResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"putResponse\"\n              },\n              \"consumes\": [\"application/json\", \"application/xml\"],\n              \"parameters\": [{\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"schema\": {\n                  \"$ref\": \"#/definitions/Pet\"\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Update an existing pet\",\n              \"responses\": {\n                \"400\": {\n                  \"description\": \"Invalid ID supplied\"\n                },\n                \"404\": {\n                  \"description\": \"Pet not found\"\n                },\n                \"405\": {\n                  \"description\": \"Validation exception\"\n                }\n              }\n            }\n          },\n          \"/store/order/{orderId}\": {\n            \"get\": {\n              \"description\": \"For valid response try integer IDs with value \u003e\u003d 1 and \u003c\u003d 10.         Other values will generated exceptions\",\n              \"tags\": [\"store\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [{\n                \"format\": \"int64\",\n                \"name\": \"orderId\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet that needs to be fetched\",\n                \"maximum\": 10,\n                \"minimum\": 1,\n                \"type\": \"integer\",\n                \"required\": true\n              }],\n              \"summary\": \"Find purchase order by ID\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"$ref\": \"#/definitions/Order\"\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid ID supplied\"\n                },\n                \"404\": {\n                  \"description\": \"Order not found\"\n                }\n              }\n            },\n            \"delete\": {\n              \"description\": \"For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors\",\n              \"tags\": [\"store\"],\n              \"operationId\": \"guest/default/deleteResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"deleteResponse\"\n              },\n              \"parameters\": [{\n                \"format\": \"int64\",\n                \"name\": \"orderId\",\n                \"in\": \"path\",\n                \"description\": \"ID of the order that needs to be deleted\",\n                \"minimum\": 1,\n                \"type\": \"integer\",\n                \"required\": true\n              }],\n              \"summary\": \"Delete purchase order by ID\",\n              \"responses\": {\n                \"400\": {\n                  \"description\": \"Invalid ID supplied\"\n                },\n                \"404\": {\n                  \"description\": \"Order not found\"\n                }\n              }\n            }\n          },\n          \"/user/logout\": {\n            \"get\": {\n              \"description\": \"\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [],\n              \"summary\": \"Logs out current logged in user session\",\n              \"responses\": {\n                \"default\": {\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"/store/inventory\": {\n            \"get\": {\n              \"security\": [{\n                \"api_key\": []\n              }],\n              \"description\": \"Returns a map of status codes to quantities\",\n              \"tags\": [\"store\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [],\n              \"summary\": \"Returns pet inventories by status\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"/user/createWithList\": {\n            \"post\": {\n              \"description\": \"\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"List of user object\",\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Creates list of users with given input array\",\n              \"responses\": {\n                \"default\": {\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"/user/{username}\": {\n            \"get\": {\n              \"description\": \"\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"username\",\n                \"in\": \"path\",\n                \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\n                \"type\": \"string\",\n                \"required\": true\n              }],\n              \"summary\": \"Get user by user name\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid username supplied\"\n                },\n                \"404\": {\n                  \"description\": \"User not found\"\n                }\n              }\n            },\n            \"put\": {\n              \"description\": \"This can only be done by the logged in user.\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/putResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"putResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"username\",\n                \"in\": \"path\",\n                \"description\": \"name that need to be updated\",\n                \"type\": \"string\",\n                \"required\": true\n              }, {\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"Updated user object\",\n                \"schema\": {\n                  \"$ref\": \"#/definitions/User\"\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Updated user\",\n              \"responses\": {\n                \"400\": {\n                  \"description\": \"Invalid user supplied\"\n                },\n                \"404\": {\n                  \"description\": \"User not found\"\n                }\n              }\n            },\n            \"delete\": {\n              \"description\": \"This can only be done by the logged in user.\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/deleteResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"deleteResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"username\",\n                \"in\": \"path\",\n                \"description\": \"The name that needs to be deleted\",\n                \"type\": \"string\",\n                \"required\": true\n              }],\n              \"summary\": \"Delete user\",\n              \"responses\": {\n                \"400\": {\n                  \"description\": \"Invalid username supplied\"\n                },\n                \"404\": {\n                  \"description\": \"User not found\"\n                }\n              }\n            }\n          },\n          \"/user/login\": {\n            \"get\": {\n              \"description\": \"\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"username\",\n                \"in\": \"query\",\n                \"description\": \"The user name for login\",\n                \"type\": \"string\",\n                \"required\": true\n              }, {\n                \"name\": \"password\",\n                \"in\": \"query\",\n                \"description\": \"The password for login in clear text\",\n                \"type\": \"string\",\n                \"required\": true\n              }],\n              \"summary\": \"Logs user into the system\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"type\": \"string\"\n                  },\n                  \"headers\": {\n                    \"X-Rate-Limit\": {\n                      \"type\": \"integer\",\n                      \"format\": \"int32\",\n                      \"description\": \"calls per hour allowed by the user\"\n                    },\n                    \"X-Expires-After\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\",\n                      \"description\": \"date in UTC when token expires\"\n                    }\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid username/password supplied\"\n                }\n              }\n            }\n          },\n          \"/user\": {\n            \"post\": {\n              \"description\": \"This can only be done by the logged in user.\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"Created user object\",\n                \"schema\": {\n                  \"$ref\": \"#/definitions/User\"\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Create user\",\n              \"responses\": {\n                \"default\": {\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"/pet/{petId}\": {\n            \"get\": {\n              \"security\": [{\n                \"api_key\": []\n              }],\n              \"description\": \"Returns a single pet\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [{\n                \"format\": \"int64\",\n                \"name\": \"petId\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet to return\",\n                \"type\": \"integer\",\n                \"required\": true\n              }],\n              \"summary\": \"Find pet by ID\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"$ref\": \"#/definitions/Pet\"\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid ID supplied\"\n                },\n                \"404\": {\n                  \"description\": \"Pet not found\"\n                }\n              }\n            },\n            \"post\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"consumes\": [\"application/x-www-form-urlencoded\"],\n              \"parameters\": [{\n                \"format\": \"int64\",\n                \"name\": \"petId\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet that needs to be updated\",\n                \"type\": \"integer\",\n                \"required\": true\n              }, {\n                \"name\": \"name\",\n                \"in\": \"formData\",\n                \"description\": \"Updated name of the pet\",\n                \"type\": \"string\",\n                \"required\": false\n              }, {\n                \"name\": \"status\",\n                \"in\": \"formData\",\n                \"description\": \"Updated status of the pet\",\n                \"type\": \"string\",\n                \"required\": false\n              }],\n              \"summary\": \"Updates a pet in the store with form data\",\n              \"responses\": {\n                \"405\": {\n                  \"description\": \"Invalid input\"\n                }\n              }\n            },\n            \"delete\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/deleteResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"deleteResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"api_key\",\n                \"in\": \"header\",\n                \"required\": false,\n                \"type\": \"string\"\n              }, {\n                \"format\": \"int64\",\n                \"name\": \"petId\",\n                \"in\": \"path\",\n                \"description\": \"Pet id to delete\",\n                \"type\": \"integer\",\n                \"required\": true\n              }],\n              \"summary\": \"Deletes a pet\",\n              \"responses\": {\n                \"400\": {\n                  \"description\": \"Invalid ID supplied\"\n                },\n                \"404\": {\n                  \"description\": \"Pet not found\"\n                }\n              }\n            }\n          },\n          \"/pet/{petId}/uploadImage\": {\n            \"post\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"consumes\": [\"multipart/form-data\"],\n              \"parameters\": [{\n                \"format\": \"int64\",\n                \"name\": \"petId\",\n                \"in\": \"path\",\n                \"description\": \"ID of pet to update\",\n                \"type\": \"integer\",\n                \"required\": true\n              }, {\n                \"name\": \"additionalMetadata\",\n                \"in\": \"formData\",\n                \"description\": \"Additional data to pass to server\",\n                \"type\": \"string\",\n                \"required\": false\n              }, {\n                \"name\": \"file\",\n                \"in\": \"formData\",\n                \"description\": \"file to upload\",\n                \"type\": \"file\",\n                \"required\": false\n              }],\n              \"summary\": \"uploads an image\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"$ref\": \"#/definitions/ApiResponse\"\n                  }\n                }\n              }\n            }\n          },\n          \"/user/createWithArray\": {\n            \"post\": {\n              \"description\": \"\",\n              \"tags\": [\"user\"],\n              \"operationId\": \"guest/default/postResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"postResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"body\",\n                \"in\": \"body\",\n                \"description\": \"List of user object\",\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/definitions/User\"\n                  }\n                },\n                \"required\": true\n              }],\n              \"summary\": \"Creates list of users with given input array\",\n              \"responses\": {\n                \"default\": {\n                  \"description\": \"successful operation\"\n                }\n              }\n            }\n          },\n          \"/pet/findByStatus\": {\n            \"get\": {\n              \"security\": [{\n                \"petstore_auth\": [\"write:pets\", \"read:pets\"]\n              }],\n              \"description\": \"Multiple status values can be provided with comma separated strings\",\n              \"tags\": [\"pet\"],\n              \"operationId\": \"guest/default/getResponse\",\n              \"produces\": [\"application/xml\", \"application/json\"],\n              \"x-openwhisk\": {\n                \"url\": \"not-used\",\n                \"namespace\": \"guest\",\n                \"package\": \"default\",\n                \"action\": \"getResponse\"\n              },\n              \"parameters\": [{\n                \"name\": \"status\",\n                \"in\": \"query\",\n                \"description\": \"Status values that need to be considered for filter\",\n                \"items\": {\n                  \"type\": \"string\",\n                  \"enum\": [\"available\", \"pending\", \"sold\"],\n                  \"default\": \"available\"\n                },\n                \"collectionFormat\": \"multi\",\n                \"type\": \"array\",\n                \"required\": true\n              }],\n              \"summary\": \"Finds Pets by status\",\n              \"responses\": {\n                \"200\": {\n                  \"description\": \"successful operation\",\n                  \"schema\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"$ref\": \"#/definitions/Pet\"\n                    }\n                  }\n                },\n                \"400\": {\n                  \"description\": \"Invalid status value\"\n                }\n              }\n            }\n          }\n        },\n        \"basePath\": \"/v2\",\n        \"info\": {\n          \"description\": \"This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\",\n          \"contact\": {\n            \"email\": \"apiteam@swagger.io\"\n          },\n          \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n          },\n          \"termsOfService\": \"http://swagger.io/terms/\",\n          \"version\": \"1.0.0\",\n          \"title\": \"Swagger Petstore\"\n        },\n        \"schemes\": [\"http\"],\n        \"definitions\": {\n          \"Pet\": {\n            \"type\": \"object\",\n            \"required\": [\"name\", \"photoUrls\"],\n            \"properties\": {\n              \"name\": {\n                \"type\": \"string\",\n                \"example\": \"doggie\"\n              },\n              \"tags\": {\n                \"type\": \"array\",\n                \"xml\": {\n                  \"name\": \"tag\",\n                  \"wrapped\": true\n                },\n                \"items\": {\n                  \"$ref\": \"#/definitions/Tag\"\n                }\n              },\n              \"photoUrls\": {\n                \"type\": \"array\",\n                \"xml\": {\n                  \"name\": \"photoUrl\",\n                  \"wrapped\": true\n                },\n                \"items\": {\n                  \"type\": \"string\"\n                }\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"pet status in the store\",\n                \"enum\": [\"available\", \"pending\", \"sold\"]\n              },\n              \"category\": {\n                \"$ref\": \"#/definitions/Category\"\n              }\n            },\n            \"xml\": {\n              \"name\": \"Pet\"\n            }\n          },\n          \"Category\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"xml\": {\n              \"name\": \"Category\"\n            }\n          },\n          \"Tag\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            },\n            \"xml\": {\n              \"name\": \"Tag\"\n            }\n          },\n          \"User\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"email\": {\n                \"type\": \"string\"\n              },\n              \"username\": {\n                \"type\": \"string\"\n              },\n              \"userStatus\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\",\n                \"description\": \"User Status\"\n              },\n              \"lastName\": {\n                \"type\": \"string\"\n              },\n              \"firstName\": {\n                \"type\": \"string\"\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"phone\": {\n                \"type\": \"string\"\n              },\n              \"password\": {\n                \"type\": \"string\"\n              }\n            },\n            \"xml\": {\n              \"name\": \"User\"\n            }\n          },\n          \"Order\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"shipDate\": {\n                \"type\": \"string\",\n                \"format\": \"date-time\"\n              },\n              \"quantity\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"petId\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"id\": {\n                \"type\": \"integer\",\n                \"format\": \"int64\"\n              },\n              \"complete\": {\n                \"type\": \"boolean\",\n                \"default\": false\n              },\n              \"status\": {\n                \"type\": \"string\",\n                \"description\": \"Order Status\",\n                \"enum\": [\"placed\", \"approved\", \"delivered\"]\n              }\n            },\n            \"xml\": {\n              \"name\": \"Order\"\n            }\n          },\n          \"ApiResponse\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"code\": {\n                \"type\": \"integer\",\n                \"format\": \"int32\"\n              },\n              \"type\": {\n                \"type\": \"string\"\n              },\n              \"message\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"swagger\": \"2.0\",\n        \"externalDocs\": {\n          \"description\": \"Find out more about Swagger\",\n          \"url\": \"http://swagger.io\"\n        }\n      },\n      \"namespace\": \"Not Used\"\n    }\n  }]\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "string ApiList \u003d response",
            "match": {
              "arguments": [
                {
                  "val": "ApiList",
                  "offset": 7
                },
                {
                  "val": "response",
                  "offset": 17
                }
              ],
              "location": "StepDefs.castToString(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "print \"Got the List of APIs Hurray!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Got the List of APIs Hurray!\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 32,
              "value": "14:00:13.877 [print] Got the List of APIs Hurray!\n"
            }
          },
          {
            "result": {
              "duration": 2510067336,
              "status": "passed"
            },
            "comments": [
              {
                "line": 78,
                "value": "#Call the get-api-list swagger to get the list of the imported swagger"
              }
            ],
            "line": 79,
            "name": "def getSwaggerList \u003d call read(\u0027classpath:com/karate/openwhisk/apimanagement/get-api-list.feature\u0027) {guid:\u0027#(guid)\u0027 ,Auth:\u0027#(Auth)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "getSwaggerList",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/apimanagement/get-api-list.feature\u0027) {guid:\u0027#(guid)\u0027 ,Auth:\u0027#(Auth)\u0027}",
                  "offset": 21
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 410059,
              "status": "passed"
            },
            "line": 80,
            "name": "print  \u003d \"Successfully got the List of API\u0027s\"",
            "match": {
              "arguments": [
                {
                  "val": " \u003d \"Successfully got the List of API\u0027s\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 80,
              "value": "14:00:13.878 [print]\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Used to Sleep between tests. sheepCount to (default 60 sec, pass \u0027-1\u0027 to avoid) sleep as many seconds] [This line is required please do not delete - or the functions cannot be called] classpath:com/karate/openwhisk/utils/sleep.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"sheepCount\": \"5\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 20,
            "name": "def sleep \u003d",
            "match": {
              "arguments": [
                {
                  "val": "sleep",
                  "offset": 4
                }
              ],
              "location": "StepDefs.defDocString(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 21,
              "value": "function() {\n  var seconds \u003d karate.get(\u0027sheepCount\u0027);\n  if (seconds) {  // check if sheepCount is defined\n    if (seconds \u003d\u003d -1) {\n      karate.log(\"NO Sleeping: as we were told not to count sheep\");\n      return;\n    }\n  } else {\n    seconds \u003d 60; // default sleep time in seconds\n    karate.log(\"Use default sleep time: \" + seconds);\n  }\n  karate.log(\"Sleeping for \" + seconds );\n  for(i \u003d 1; i \u003c\u003d seconds; i++) {\n    java.lang.Thread.sleep(1*1000);\n//karate.log(\"counting sheep - \" + i);\n//karate.log(\"Done sleeping, back to work...\");\n  }\n \n}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 44,
            "name": "print \"I cam here\"",
            "match": {
              "arguments": [
                {
                  "val": "\"I cam here\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 44,
              "value": "14:00:13.888 [print] I cam here\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 45,
            "name": "call sleep",
            "match": {
              "arguments": [
                {
                  "val": "sleep",
                  "offset": 5
                },
                {}
              ],
              "location": "StepDefs.callAndUpdateConfigAndVars(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 45,
              "value": "14:00:13.892 Sleeping for 5 \n"
            }
          },
          {
            "result": {
              "duration": 5039650258,
              "status": "passed"
            },
            "line": 81,
            "name": "def sleepsometime \u003d callonce read(\u0027classpath:com/karate/openwhisk/utils/sleep.feature\u0027) {sheepCount:\u00275\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "sleepsometime",
                  "offset": 4
                },
                {
                  "val": "callonce read(\u0027classpath:com/karate/openwhisk/utils/sleep.feature\u0027) {sheepCount:\u00275\u0027}",
                  "offset": 20
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 81,
              "value": "14:00:18.917 cached callonce: read(\u0027classpath:com/karate/openwhisk/utils/sleep.feature\u0027)\n"
            }
          },
          {
            "result": {
              "duration": 346334,
              "status": "passed"
            },
            "line": 82,
            "name": "print \"Got the List of APIs Hurray!\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Got the List of APIs Hurray!\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 82,
              "value": "14:00:18.918 [print] Got the List of APIs Hurray!\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[0] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet/test123\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:18.932 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet/test123\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:20.797 response time in milliseconds: 1865\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:20 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: 8480wB3JCXHMWkeH3Kow7jNhwxMzL7EI\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[1] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet/test123\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:20.805 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet/test123\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:22.577 response time in milliseconds: 1771\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 586\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:21 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: f8urcnqSmOiZRxllflpfLgl34lIUg1tU\n{\n  \"__ow_method\": \"post\",\n  \"petId\": \"test123\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[2] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet/test123\",\n  \"methodtype\": \"delete\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:22.584 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet/test123\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:24.487 response time in milliseconds: 1902\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:23 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: nIjbZcxYJAv431gSfv6IlX46eRZhu21l\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[3] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:24.496 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:25.499 response time in milliseconds: 1003\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 574\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:24 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: XkroKwKvORhcOpeUZ9KuiVnR4s7W0XLX\n{\n  \"\": \"\",\n  \"__ow_method\": \"post\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[4] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet\",\n  \"methodtype\": \"put\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:25.509 request:\n1 \u003e PUT https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:27.378 response time in milliseconds: 1869\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:26 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: GPWOqUfjpFGV0ceQYSGEBFul5e1bUeen\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[5] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet/findByStatus\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:27.388 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet/findByStatus\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:28.372 response time in milliseconds: 983\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:27 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: KqeDSe1NZGoT49yKTMdzduydyWILooeQ\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[6] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/store/order\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:28.380 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/store/order\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:29.299 response time in milliseconds: 919\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 574\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:28 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: 7NtWSbEkbRj6sVGKlFyE54Vhjfb0mbIm\n{\n  \"\": \"\",\n  \"__ow_method\": \"post\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[7] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/store/order/test234\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:29.307 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/store/order/test234\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:30.479 response time in milliseconds: 1171\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:29 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: w69FY7hXQpQad6D7ZEVjzn0P6hIOjPjM\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[8] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/store/order/test234\",\n  \"methodtype\": \"delete\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:30.486 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/store/order/test234\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:31.845 response time in milliseconds: 1359\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:31 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: z2dBYGMXJlhsBR2zhdY52lBhbIrYVbtI\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[9] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/logout\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:31.852 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/logout\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:33.028 response time in milliseconds: 1175\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:31 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: FsXKwkaz6LzTKUbOTvbdQcBHJ1shiUOW\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[10] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:33.035 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:34.247 response time in milliseconds: 1211\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 574\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:33 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: ZGAcf0u9PTCWwqvH169w8cps7saRXzIk\n{\n  \"\": \"\",\n  \"__ow_method\": \"post\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[11] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/login\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:34.254 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/login\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:35.291 response time in milliseconds: 1037\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:34 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: Q73FekvoQvZ97jNv2b6v4SgiPyDsNbqe\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[12] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet/test123/uploadImage\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:35.298 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet/test123/uploadImage\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:36.440 response time in milliseconds: 1142\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 586\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:35 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: oq2wJr9GzF6oP95DjMzNpfiL8x5FrbLp\n{\n  \"__ow_method\": \"post\",\n  \"petId\": \"test123\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[13] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/createWithArray\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:36.448 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/createWithArray\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:37.486 response time in milliseconds: 1038\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 574\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:36 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: GdibzgCO5SoVUpBdiHhKiPrQtE324D4N\n{\n  \"\": \"\",\n  \"__ow_method\": \"post\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[14] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/pet/findByTags\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:37.492 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/pet/findByTags\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:38.740 response time in milliseconds: 1248\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:38 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: Z0zScV2GabYVpsJKpagOg4aDrbHG9Hn6\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[15] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/store/inventory\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:38.747 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/store/inventory\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:43.596 response time in milliseconds: 4848\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:42 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: jtUKw7GRsp9cjdP8jcLnOq0eXiPnlpww\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[16] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/createWithList\",\n  \"methodtype\": \"post\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:43.603 request:\n1 \u003e POST https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/createWithList\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:44.511 response time in milliseconds: 907\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Cache-Control: max-age\u003d60\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 574\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:43 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: oQFTpKQpDLUJ50lALFdbMrrm5US89X8Z\n{\n  \"\": \"\",\n  \"__ow_method\": \"post\",\n  \"__ow_headers\": {\n    \"x-forwarded-port\": \"443\",\n    \"user-agent\": \"Apache-HttpClient/4.5.5 (Java/1.8.0_131)\",\n    \"x-forwarded-proto\": \"https\",\n    \"host\": \"controller-a\",\n    \"authorization\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\",\n    \"content-type\": \"application/json\",\n    \"connection\": \"close\",\n    \"accept-encoding\": \"gzip, deflate\",\n    \"x-forwarded-for\": \"103.43.114.129\"\n  },\n  \"__ow_path\": \"\",\n  \"__ow_user\": \"guest\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[17] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/tester\",\n  \"methodtype\": \"get\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:44.518 request:\n1 \u003e GET https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/tester\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:00:45.527 response time in milliseconds: 1009\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:44 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: MISS\n1 \u003c X-Request-ID: 1j3iGWWiB5xBwcOml86rq9zkGEllue9z\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[18] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/tester\",\n  \"methodtype\": \"put\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:45.533 request:\n1 \u003e PUT https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/tester\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:46.760 response time in milliseconds: 1227\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:46 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: Pg7Ckiareb06I1rXbBOM3GlIeN4IUNob\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call[19] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"endpoint\": \"/apis/guest/v2/user/tester\",\n  \"methodtype\": \"delete\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 25,
            "name": "url BaseUrl + endpoint",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + endpoint",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "\tif (typeof methodtype \u003d\u003d \u0027post\u0027||\u0027put\u0027||\u0027delete\u0027) {\n\t    karate.set(\u0027payload\u0027, \u0027\u0027);\n\t} else {\n\t\t\tkarate.set(\u0027payload\u0027, \u0027\u0027);\n\t}"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 36,
            "name": "request payload",
            "match": {
              "arguments": [
                {
                  "val": "payload",
                  "offset": 8
                }
              ],
              "location": "StepDefs.request(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 37,
            "name": "method methodtype",
            "match": {
              "arguments": [
                {
                  "val": "methodtype",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 37,
              "value": "14:00:46.768 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/apis/guest/v2/user/tester\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Length: 0\n1 \u003e Content-Type: application/json; charset\u003dUTF-8\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n\n14:00:47.916 response time in milliseconds: 1148\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 45\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:30:46 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: HJrRORIu0hxRvZDQF0xhqNrkLByri155\n{\n  \"payload\": \"Hello world Serverless API\"\n}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 38,
            "name": "status 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28998850885,
              "status": "passed"
            },
            "comments": [
              {
                "line": 84,
                "value": "#Hit the imnported APIs and asset the response"
              }
            ],
            "line": 85,
            "name": "def result \u003d callonce read(\u0027classpath:com/karate/openwhisk/apimanagement/hit-api.feature\u0027) apis",
            "match": {
              "arguments": [
                {
                  "val": "result",
                  "offset": 4
                },
                {
                  "val": "callonce read(\u0027classpath:com/karate/openwhisk/apimanagement/hit-api.feature\u0027) apis",
                  "offset": 13
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 85,
              "value": "14:00:47.917 cached callonce: read(\u0027classpath:com/karate/openwhisk/apimanagement/hit-api.feature\u0027)\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [The feature deletes the list of API from the input base path.This Feature can be run standalone or in sequence with other tests] [Import Swagger.json from the utils and print the output as a string] classpath:com/karate/openwhisk/apimanagement/delete-api-list.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"guid\": \"23bc46b1-71f6-4ed5-8c54-816aa4f8c502\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 21,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 22,
            "name": "def nameSpace \u003d \u0027guest\u0027",
            "match": {
              "arguments": [
                {
                  "val": "nameSpace",
                  "offset": 4
                },
                {
                  "val": "\u0027guest\u0027",
                  "offset": 16
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 26,
            "name": "url BaseUrl + \u0027/api/v1/web/whisk.system/apimgmt/deleteApi.http?accesstoken\u003dDUMMY+TOKEN\u0026basepath\u003dv2\u0027+ \u0027\u0026spaceguid\u003d\u0027+guid",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl + \u0027/api/v1/web/whisk.system/apimgmt/deleteApi.http?accesstoken\u003dDUMMY+TOKEN\u0026basepath\u003dv2\u0027+ \u0027\u0026spaceguid\u003d\u0027+guid",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "method delete",
            "match": {
              "arguments": [
                {
                  "val": "delete",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 29,
              "value": "14:00:47.936 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/web/whisk.system/apimgmt/deleteApi.http?accesstoken\u003dDUMMY+TOKEN\u0026basepath\u003dv2\u0026spaceguid\u003d23bc46b1-71f6-4ed5-8c54-816aa4f8c502\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:01:03.806 response time in milliseconds: 15869\n1 \u003c 204\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Methods: OPTIONS, GET, DELETE, POST, PUT, HEAD, PATCH\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Date: Wed, 08 Aug 2018 08:31:03 GMT\n1 \u003c Perf-Br-Resp-Out: 1533717063.094\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-GW-Cache: BYPASS\n1 \u003c X-Request-ID: D8JY4W4OILZ4d6lEVmjvdHvXEj0T4MTG\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "print Successfully Deleted the API List",
            "match": {
              "arguments": [
                {
                  "val": "Successfully Deleted the API List",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 30,
              "value": "14:01:03.807 [print]\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "status 204",
            "match": {
              "arguments": [
                {
                  "val": "204",
                  "offset": 7
                }
              ],
              "location": "StepDefs.status(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15889370811,
              "status": "passed"
            },
            "comments": [
              {
                "line": 88,
                "value": "# Call the Delete API feature file to delete the imported API List"
              }
            ],
            "line": 89,
            "name": "def deleteSwagger \u003d call read(\u0027classpath:com/karate/openwhisk/apimanagement/delete-api-list.feature\u0027) {guid:\u0027#(guid)\u0027 ,Auth:\u0027#(Auth)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "deleteSwagger",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/apimanagement/delete-api-list.feature\u0027) {guid:\u0027#(guid)\u0027 ,Auth:\u0027#(Auth)\u0027}",
                  "offset": 20
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 1376459,
              "status": "passed"
            },
            "line": 90,
            "name": "print \"Successfully imported the swagger\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Successfully imported the swagger\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 90,
              "value": "14:01:03.808 [print] Successfully imported the swagger\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"actionName\": \"getResponse\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 23,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "def path \u003d \u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
            "match": {
              "arguments": [
                {
                  "val": "path",
                  "offset": 4
                },
                {
                  "val": "\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "url BaseUrl+path",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+path",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "method delete",
            "match": {
              "arguments": [
                {
                  "val": "delete",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "14:01:03.818 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/getResponse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:01:04.868 response time in milliseconds: 1049\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 535\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:31:03 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [qMxKafG3m372yAxGErApnzgGb3VYKdCk, zkErGg1qXvwevpFAQiPGcvqrKmjDsqBO]\n1 \u003c X-Request-Id: [qMxKafG3m372yAxGErApnzgGb3VYKdCk, zkErGg1qXvwevpFAQiPGcvqrKmjDsqBO]\n{\"name\":\"getResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 33,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 33,
              "value": "14:01:04.869 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 34,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 35,
              "value": "if(responseStatusCode\u003d\u003d200){\n\t karate.log(\"Action got deleted\");\n\t }\nelse if(responseStatusCode \u003d\u003d 404){\n   karate.log(\"The requested Action does not exist\");\n   }"
            }
          },
          {
            "result": {
              "duration": 1060533732,
              "status": "passed"
            },
            "comments": [
              {
                "line": 92,
                "value": "# Delete the list of actions"
              }
            ],
            "line": 93,
            "name": "def deleteAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027getResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "deleteAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027getResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 93,
              "value": "14:01:04.869 Action got deleted \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"actionName\": \"postResponse\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 23,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "def path \u003d \u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
            "match": {
              "arguments": [
                {
                  "val": "path",
                  "offset": 4
                },
                {
                  "val": "\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "url BaseUrl+path",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+path",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "method delete",
            "match": {
              "arguments": [
                {
                  "val": "delete",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "14:01:04.876 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/postResponse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:01:06.045 response time in milliseconds: 1169\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 517\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:31:05 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [HQi7PfM4Mrn76Ccypg3WAzK2hYWsDDxV, 8dWpn3v7SAJoDyF6bcNI8duOanEgR2bJ]\n1 \u003c X-Request-Id: [HQi7PfM4Mrn76Ccypg3WAzK2hYWsDDxV, 8dWpn3v7SAJoDyF6bcNI8duOanEgR2bJ]\n{\"name\":\"postResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main(params) {\\n    return {\\n        statusCode: 200,\\n        body: params,\\n        headers: {\\n            \\\"Cache-Control\\\": \\\"max-age\u003d60\\\"\\n        }\\n    }\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 33,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 33,
              "value": "14:01:06.046 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 34,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 35,
              "value": "if(responseStatusCode\u003d\u003d200){\n\t karate.log(\"Action got deleted\");\n\t }\nelse if(responseStatusCode \u003d\u003d 404){\n   karate.log(\"The requested Action does not exist\");\n   }"
            }
          },
          {
            "result": {
              "duration": 1177641075,
              "status": "passed"
            },
            "line": 94,
            "name": "def deleteAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027postResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "deleteAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027postResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 94,
              "value": "14:01:06.047 Action got deleted \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"actionName\": \"putResponse\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 23,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "def path \u003d \u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
            "match": {
              "arguments": [
                {
                  "val": "path",
                  "offset": 4
                },
                {
                  "val": "\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "url BaseUrl+path",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+path",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "method delete",
            "match": {
              "arguments": [
                {
                  "val": "delete",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "14:01:06.054 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/putResponse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:01:06.995 response time in milliseconds: 941\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 535\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:31:05 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [JDwZhYdOjYRl4EvmHcoxxB6vmAj4KHsy, eOjcdV45Ctj93cvGUBFsYq0mp9szuYAX]\n1 \u003c X-Request-Id: [JDwZhYdOjYRl4EvmHcoxxB6vmAj4KHsy, eOjcdV45Ctj93cvGUBFsYq0mp9szuYAX]\n{\"name\":\"putResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 33,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 33,
              "value": "14:01:06.996 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 34,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 35,
              "value": "if(responseStatusCode\u003d\u003d200){\n\t karate.log(\"Action got deleted\");\n\t }\nelse if(responseStatusCode \u003d\u003d 404){\n   karate.log(\"The requested Action does not exist\");\n   }"
            }
          },
          {
            "result": {
              "duration": 949974385,
              "status": "passed"
            },
            "line": 95,
            "name": "def deleteAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027putResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "deleteAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027putResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 95,
              "value": "14:01:06.997 Action got deleted \n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 0,
            "name": "call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature",
            "match": {},
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 0,
              "value": "{\n  \"actionName\": \"deleteResponse\",\n  \"nameSpace\": \"guest\",\n  \"Auth\": \"Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\"\n}\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 23,
            "name": "configure ssl \u003d true",
            "match": {
              "arguments": [
                {
                  "val": "ssl",
                  "offset": 10
                },
                {
                  "val": "true",
                  "offset": 16
                }
              ],
              "location": "StepDefs.configure(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 27,
            "name": "def path \u003d \u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
            "match": {
              "arguments": [
                {
                  "val": "path",
                  "offset": 4
                },
                {
                  "val": "\u0027/api/v1/namespaces/\u0027+nameSpace+\u0027/actions/\u0027+actionName",
                  "offset": 11
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 28,
            "name": "url BaseUrl+path",
            "match": {
              "arguments": [
                {
                  "val": "BaseUrl+path",
                  "offset": 4
                }
              ],
              "location": "StepDefs.url(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 29,
            "name": "header Authorization \u003d Auth",
            "match": {
              "arguments": [
                {
                  "val": "Authorization",
                  "offset": 7
                },
                {
                  "val": "Auth",
                  "offset": 23
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 30,
            "name": "header Content-Type \u003d \u0027application/json\u0027",
            "match": {
              "arguments": [
                {
                  "val": "Content-Type",
                  "offset": 7
                },
                {
                  "val": "\u0027application/json\u0027",
                  "offset": 22
                }
              ],
              "location": "StepDefs.header(String,String\u003e)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 31,
            "name": "method delete",
            "match": {
              "arguments": [
                {
                  "val": "delete",
                  "offset": 7
                }
              ],
              "location": "StepDefs.method(String)"
            },
            "keyword": "When ",
            "doc_string": {
              "content_type": "",
              "line": 31,
              "value": "14:01:07.004 request:\n1 \u003e DELETE https://controller-a-rtqe2-ue1-a.qe.adobe-runtime.com/api/v1/namespaces/guest/actions/deleteResponse\n1 \u003e Accept-Encoding: gzip,deflate\n1 \u003e Authorization: Basic MjNiYzQ2YjEtNzFmNi00ZWQ1LThjNTQtODE2YWE0ZjhjNTAyOjEyM3pPM3haQ0xyTU42djJCS0sxZFhZRnBYbFBrY2NPRnFtMTJDZEFzTWdSVTRWck5aOWx5R1ZDR3VNREdJd1A\u003d\n1 \u003e Connection: Keep-Alive\n1 \u003e Content-Type: application/json\n1 \u003e Host: controller-a-rtqe2-ue1-a.qe.adobe-runtime.com\n1 \u003e User-Agent: Apache-HttpClient/4.5.5 (Java/1.8.0_131)\n\n14:01:07.880 response time in milliseconds: 875\n1 \u003c 200\n1 \u003c Access-Control-Allow-Headers: Authorization, Content-Type\n1 \u003c Access-Control-Allow-Origin: *\n1 \u003c Connection: keep-alive\n1 \u003c Content-Length: 538\n1 \u003c Content-Type: application/json\n1 \u003c Date: Wed, 08 Aug 2018 08:31:07 GMT\n1 \u003c Server: api-gateway/1.9.3.1\n1 \u003c X-Request-ID: [7umq2d0t7inubc9MkgmZOsWMGwQH4Lrd, 282FKHs9agfuLcqcbQjZYlikVU2yQwAa]\n1 \u003c X-Request-Id: [7umq2d0t7inubc9MkgmZOsWMGwQH4Lrd, 282FKHs9agfuLcqcbQjZYlikVU2yQwAa]\n{\"name\":\"deleteResponse\",\"publish\":false,\"annotations\":[{\"key\":\"web-export\",\"value\":true},{\"key\":\"raw-http\",\"value\":false},{\"key\":\"final\",\"value\":true},{\"key\":\"exec\",\"value\":\"nodejs:6\"}],\"version\":\"0.0.1\",\"exec\":{\"kind\":\"nodejs:6\",\"code\":\"function main({name:name\u003d\u0027Serverless API\u0027}) {\\n    return {\\n      body: {payload:`Hello world ${name}`},\\n      statusCode: 200,\\n      headers:{ \u0027Content-Type\u0027: \u0027application/json\u0027}\\n    };\\n}\\n\",\"binary\":false},\"parameters\":[],\"limits\":{\"timeout\":60000,\"memory\":256,\"logs\":10},\"namespace\":\"guest\"}\n\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 32,
            "name": "def responseStatusCode \u003d responseStatus",
            "match": {
              "arguments": [
                {
                  "val": "responseStatusCode",
                  "offset": 4
                },
                {
                  "val": "responseStatus",
                  "offset": 25
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* "
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 33,
            "name": "print \u0027The value of responseStatusCode is:\u0027,responseStatusCode",
            "match": {
              "arguments": [
                {
                  "val": "\u0027The value of responseStatusCode is:\u0027,responseStatusCode",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 33,
              "value": "14:01:07.881 [print] The value of responseStatusCode is: 200\n"
            }
          },
          {
            "result": {
              "duration": 0,
              "status": "passed"
            },
            "line": 34,
            "name": "eval",
            "match": {
              "location": "StepDefs.evalDocString(String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 35,
              "value": "if(responseStatusCode\u003d\u003d200){\n\t karate.log(\"Action got deleted\");\n\t }\nelse if(responseStatusCode \u003d\u003d 404){\n   karate.log(\"The requested Action does not exist\");\n   }"
            }
          },
          {
            "result": {
              "duration": 884004673,
              "status": "passed"
            },
            "line": 96,
            "name": "def deleteAction \u003d call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027deleteResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
            "match": {
              "arguments": [
                {
                  "val": "deleteAction",
                  "offset": 4
                },
                {
                  "val": "call read(\u0027classpath:com/karate/openwhisk/wskactions/delete-action.feature\u0027) {actionName:\u0027deleteResponse\u0027 ,nameSpace:\u0027#(nameSpace)\u0027 ,Auth:\u0027#(Auth)\u0027}",
                  "offset": 19
                }
              ],
              "location": "StepDefs.def(String,String)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 96,
              "value": "14:01:07.881 Action got deleted \n"
            }
          },
          {
            "result": {
              "duration": 1305214,
              "status": "passed"
            },
            "line": 97,
            "name": "print \"Successfully deleted all the actions\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Successfully deleted all the actions\"",
                  "offset": 6
                }
              ],
              "location": "StepDefs.print(String\u003e)"
            },
            "keyword": "* ",
            "doc_string": {
              "content_type": "",
              "line": 97,
              "value": "14:01:07.883 [print] Successfully deleted all the actions\n"
            }
          }
        ]
      }
    ],
    "name": "com/karate/openwhisk/smoketests/TC03_SmokeTest_ApiManagement.feature",
    "description": "This feature file will test the basic API Management Functionality",
    "id": "this-feature-file-will-test-the-basic-api-management-functionality",
    "keyword": "Feature",
    "uri": "com/karate/openwhisk/smoketests/TC03_SmokeTest_ApiManagement.feature",
    "tags": [
      {
        "line": 18,
        "name": "@smoketests"
      }
    ]
  }
]