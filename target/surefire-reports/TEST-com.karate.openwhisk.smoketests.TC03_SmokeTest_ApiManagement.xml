<?xml version="1.0" encoding="UTF-8"?>
<testsuite failures="1"
           name="This feature file will test the basic API Management Functionality"
           skipped="0"
           tests="1"
           time="1.293543">
   <testcase classname="com.karate.openwhisk.smoketests.TC03_SmokeTest_ApiManagement"
             name="TC03-As a user I want to import my swagger.json and see if my API gives a Two Hundred OK response"
             time="1.293543">
      <failure message="com.intuit.karate.exception.KarateException: &#xA;&#xA;javascript evaluation failed: if (!test_user_key)&#xA;{&#xA;var getNSCreds = karate.callSingle('classpath:com/karate/openwhisk/wskadmin/get-user.feature');&#xA;var test=getNSCreds.Auth; &#xA;karate.set('authFunction',  'Basic '+getNSCreds.Auth);&#xA;karate.set('guid', getNSCreds.uuid[0]);&#xA;}   &#xA;else&#xA;{&#xA;var getGUID = base64decoding(test_user_key); &#xA;karate.set('authFunction' , 'Basic '+test_user_key);&#xA;karate.set('guid' , getGUID);&#xA;karate.log('I am here');&#xA;karate.log(getGUID);&#xA;}, &#xA;&#xA;status code was: 404, expected: 200, response time: 1161, url: https://3678a12b-fc64-4cef-ab97-d7b28c77fbe1-bluemix.cloudant.com:443/whisk_dev_subjects/bladerunner-test, response: {&#34;error&#34;:&#34;not_found&#34;,&#34;reason&#34;:&#34;missing&#34;}&#xA;&#x9;at com.intuit.karate.Script.evalFeatureCall(Script.java:1667)&#xA;&#x9;at com.intuit.karate.Script.call(Script.java:1599)&#xA;&#x9;at com.intuit.karate.Script.callWithCache(Script.java:183)&#xA;&#x9;at com.intuit.karate.Script.evalKarateExpression(Script.java:227)&#xA;&#x9;at com.intuit.karate.Script.evalKarateExpression(Script.java:171)&#xA;&#x9;at com.intuit.karate.Script.assign(Script.java:601)&#xA;&#x9;at com.intuit.karate.Script.assign(Script.java:527)&#xA;&#x9;at com.intuit.karate.StepDefs.def(StepDefs.java:309)&#xA;&#x9;at ✽.* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature')(/Users/rtripath/repo/OPENWHISK-KARATE/ow-karate/target/test-classes/com/karate/openwhisk/smoketests/TC03_SmokeTest_ApiManagement.feature:32)&#xA;">* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def params = '?blocking=true&amp;result=false'................................passed
* def scriptcodeget = call read('classpath:com/karate/openwhisk/functions/getResponse.js').passed
* def scriptcodepost = call read('classpath:com/karate/openwhisk/functions/postResponse.js').passed
* def scriptcodeput = call read('classpath:com/karate/openwhisk/functions/putResponse.js').passed
* def scriptcodedelete = call read('classpath:com/karate/openwhisk/functions/deleteResponse.js').passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
* string raw_swagger = read('classpath:com/karate/openwhisk/utils/pet-store-swagger.json').passed
* call [This feature file will either use the NS credentials provided or get the NS of guest] [This line is required please do not delete - or the functions cannot be called] classpath:com/karate/openwhisk/utils/get-auth.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def base64decoding = read('classpath:com/karate/openwhisk/utils/base64_decode.js').passed
* print "Start".............................................................passed
* call [Create Namespace] [Get NS credentials] classpath:com/karate/openwhisk/wskadmin/get-user.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = test_user_ns..............................................passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
Given url AdminBaseUrl......................................................passed
* print "I am here in get-user".............................................passed
* def DBpath =..............................................................passed
And path DBpath+nameSpace...................................................passed
And header Authorization = AdminAuth........................................passed
And header Content-Type = 'application/json'................................passed
When method get.............................................................passed
Then status 200.............................................................failed
* eval......................................................................failed
* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature').failed
* def Auth = getAuth.Auth...................................................skipped
* def guid = getAuth.guid...................................................skipped
* def webAction = 'true'....................................................skipped
* table apis................................................................skipped
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodeget)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)' , actionName: 'getResponse' , webAction: '#(webAction)'}.skipped
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodepost)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)', actionName: 'postResponse' , webAction: '#(webAction)'}.skipped
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodeput)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)' , actionName: 'putResponse' , webAction: '#(webAction)'}.skipped
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodedelete)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)' ,actionName: 'deleteResponse' , webAction: '#(webAction)'}.skipped
* print "Successfully Created the required actions".........................skipped
* def importSwagger = call read('classpath:com/karate/openwhisk/apimanagement/import-swagger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',guid:'#(guid)' , raw_swagger: '#(raw_swagger)'}.skipped
* print "Successfully imported the swagger".................................skipped
* def getSwaggerList = call read('classpath:com/karate/openwhisk/apimanagement/get-api-list.feature') {guid:'#(guid)' ,Auth:'#(Auth)'}.skipped
* print  = "Successfully got the List of API's".............................skipped
* def sleepsometime = callonce read('classpath:com/karate/openwhisk/utils/sleep.feature') {sheepCount:'15'}.skipped
* print "Got the List of APIs Hurray!"......................................skipped
* def result = callonce read('classpath:com/karate/openwhisk/apimanagement/hit-api.feature') apis.skipped
* def deleteSwagger = call read('classpath:com/karate/openwhisk/apimanagement/delete-api-list.feature') {guid:'#(guid)' ,Auth:'#(Auth)'}.skipped
* print "Successfully imported the swagger".................................skipped
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'getResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'postResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'putResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'deleteResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.skipped
* print "Successfully deleted all the actions"..............................skipped

StackTrace:
com.intuit.karate.exception.KarateException: 

javascript evaluation failed: if (!test_user_key)
{
var getNSCreds = karate.callSingle('classpath:com/karate/openwhisk/wskadmin/get-user.feature');
var test=getNSCreds.Auth; 
karate.set('authFunction',  'Basic '+getNSCreds.Auth);
karate.set('guid', getNSCreds.uuid[0]);
}   
else
{
var getGUID = base64decoding(test_user_key); 
karate.set('authFunction' , 'Basic '+test_user_key);
karate.set('guid' , getGUID);
karate.log('I am here');
karate.log(getGUID);
}, 

status code was: 404, expected: 200, response time: 1161, url: https://3678a12b-fc64-4cef-ab97-d7b28c77fbe1-bluemix.cloudant.com:443/whisk_dev_subjects/bladerunner-test, response: {"error":"not_found","reason":"missing"}
	at com.intuit.karate.Script.evalFeatureCall(Script.java:1667)
	at com.intuit.karate.Script.call(Script.java:1599)
	at com.intuit.karate.Script.callWithCache(Script.java:183)
	at com.intuit.karate.Script.evalKarateExpression(Script.java:227)
	at com.intuit.karate.Script.evalKarateExpression(Script.java:171)
	at com.intuit.karate.Script.assign(Script.java:601)
	at com.intuit.karate.Script.assign(Script.java:527)
	at com.intuit.karate.StepDefs.def(StepDefs.java:309)
	at ✽.* def getAuth = callonce read('classpath:com/karate/openwhisk/utils/get-auth.feature')(/Users/rtripath/repo/OPENWHISK-KARATE/ow-karate/target/test-classes/com/karate/openwhisk/smoketests/TC03_SmokeTest_ApiManagement.feature:32)
</failure>
   </testcase>
</testsuite>
