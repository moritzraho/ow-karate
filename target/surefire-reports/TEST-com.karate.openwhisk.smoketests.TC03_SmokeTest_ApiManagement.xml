<?xml version="1.0" encoding="UTF-8"?>
<testsuite failures="0"
           name="This feature file will test the basic API Management Functionality"
           skipped="0"
           tests="1"
           time="69.725536">
   <testcase classname="com.karate.openwhisk.smoketests.TC03_SmokeTest_ApiManagement"
             name="TC03-As a user I want to import my swagger.json and see if my API gives a Two Hundred OK response"
             time="69.725536">
      <system-out>* configure ssl = true......................................................passed
* def nameSpace = 'guest'...................................................passed
* def params = '?blocking=true&amp;result=false'................................passed
* def scriptcodeget = call read('classpath:com/karate/openwhisk/functions/getResponse.js').passed
* def scriptcodepost = call read('classpath:com/karate/openwhisk/functions/postResponse.js').passed
* def scriptcodeput = call read('classpath:com/karate/openwhisk/functions/putResponse.js').passed
* def scriptcodedelete = call read('classpath:com/karate/openwhisk/functions/deleteResponse.js').passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
* string raw_swagger = read('classpath:com/karate/openwhisk/utils/pet-store-swagger.json').passed
* def webAction = 'true'....................................................passed
* table apis................................................................passed
* call [Create Namespace] [Get NS credentials] classpath:com/karate/openwhisk/wskadmin/get-user.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = 'guest'...................................................passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
Given url AdminBaseUrl......................................................passed
* print "I am here in get-user".............................................passed
* def DBpath =..............................................................passed
And path DBpath+nameSpace...................................................passed
And header Authorization = AdminAuth........................................passed
And header Content-Type = 'application/json'................................passed
When method get.............................................................passed
Then status 200.............................................................passed
And string NScreds = response...............................................passed
* def uuid = $response.namespaces[*].uuid...................................passed
* def key = $response.namespaces[*].key.....................................passed
* def result = uuid[0]+':'+ key[0]..........................................passed
* def Auth = base64encoding(result).........................................passed
* print result..............................................................passed
* def FileUtil = Java.type('com.karate.openwhisk.utils.OWFileUtil').........passed
* string fileSaveResult = FileUtil.writeToFile(Auth, 'authFile.txt')........passed
* assert fileSaveResult == 'success'........................................passed
* def getNSCreds = call read('classpath:com/karate/openwhisk/wskadmin/get-user.feature') {nameSpace:'#(nameSpace)'}.passed
* def result = getNSCreds.result............................................passed
* def Auth = base64encoding(result).........................................passed
* def guid = getNSCreds.uuid[0].............................................passed
* call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature.passed
* configure ssl = true......................................................passed
* eval......................................................................passed
* eval......................................................................passed
* def requestBody = {"namespace":'#(nameSpace)',"name":'#(actionName)',"exec":{"kind":"nodejs:default","code":'#(script)'},"annotations":[{"key":"web-export","value":true},{"key":"raw-http","value":false},{"key":"final","value":true}]}.passed
* string payload = requestBody..............................................passed
Given url BaseUrl+'/api/v1/namespaces/'+nameSpace+'/actions/'+actionName+'?overwrite=false'.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
And request payload.........................................................passed
When method put.............................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* eval if(responseStatusCode == 200) karate.set('actName', response.name )..passed
* print 'Action name for the created action ' + actName.....................passed
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodeget)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)' , actionName: 'getResponse' , webAction: '#(webAction)'}.passed
* call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature.passed
* configure ssl = true......................................................passed
* eval......................................................................passed
* eval......................................................................passed
* def requestBody = {"namespace":'#(nameSpace)',"name":'#(actionName)',"exec":{"kind":"nodejs:default","code":'#(script)'},"annotations":[{"key":"web-export","value":true},{"key":"raw-http","value":false},{"key":"final","value":true}]}.passed
* string payload = requestBody..............................................passed
Given url BaseUrl+'/api/v1/namespaces/'+nameSpace+'/actions/'+actionName+'?overwrite=false'.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
And request payload.........................................................passed
When method put.............................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* eval if(responseStatusCode == 200) karate.set('actName', response.name )..passed
* print 'Action name for the created action ' + actName.....................passed
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodepost)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)', actionName: 'postResponse' , webAction: '#(webAction)'}.passed
* call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature.passed
* configure ssl = true......................................................passed
* eval......................................................................passed
* eval......................................................................passed
* def requestBody = {"namespace":'#(nameSpace)',"name":'#(actionName)',"exec":{"kind":"nodejs:default","code":'#(script)'},"annotations":[{"key":"web-export","value":true},{"key":"raw-http","value":false},{"key":"final","value":true}]}.passed
* string payload = requestBody..............................................passed
Given url BaseUrl+'/api/v1/namespaces/'+nameSpace+'/actions/'+actionName+'?overwrite=false'.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
And request payload.........................................................passed
When method put.............................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* eval if(responseStatusCode == 200) karate.set('actName', response.name )..passed
* print 'Action name for the created action ' + actName.....................passed
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodeput)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)' , actionName: 'putResponse' , webAction: '#(webAction)'}.passed
* call [Create an Action] [As a user I want to create an action] classpath:com/karate/openwhisk/wskactions/create-action.feature.passed
* configure ssl = true......................................................passed
* eval......................................................................passed
* eval......................................................................passed
* def requestBody = {"namespace":'#(nameSpace)',"name":'#(actionName)',"exec":{"kind":"nodejs:default","code":'#(script)'},"annotations":[{"key":"web-export","value":true},{"key":"raw-http","value":false},{"key":"final","value":true}]}.passed
* string payload = requestBody..............................................passed
Given url BaseUrl+'/api/v1/namespaces/'+nameSpace+'/actions/'+actionName+'?overwrite=false'.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
And request payload.........................................................passed
When method put.............................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* eval if(responseStatusCode == 200) karate.set('actName', response.name )..passed
* print 'Action name for the created action ' + actName.....................passed
* def createAction = call read('classpath:com/karate/openwhisk/wskactions/create-action.feature') {script:'#(scriptcodedelete)' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)' ,actionName: 'deleteResponse' , webAction: '#(webAction)'}.passed
* print "Successfully Created the required actions".........................passed
* call [Import Swagger.json] [Import Swagger.json from the utils and print the output as a string] classpath:com/karate/openwhisk/apimanagement/import-swagger.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = 'guest'...................................................passed
* def stringify =  read('classpath:com/karate/openwhisk/utils/swagger-stringify.js').passed
* def base64encoding = read('classpath:com/karate/openwhisk/utils/base64.js').passed
* def payload = stringify(raw_swagger)......................................passed
Given url BaseUrl + '/api/v1/web/whisk.system/apimgmt/createApi.http?accesstoken=DUMMY+TOKEN&amp;responsetype=json&amp;spaceguid='+guid.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
And request payload.........................................................passed
When method post............................................................passed
Then status 200.............................................................passed
* def importSwagger = call read('classpath:com/karate/openwhisk/apimanagement/import-swagger.feature') {nameSpace:'#(nameSpace)' ,Auth:'#(Auth)',guid:'#(guid)' , raw_swagger: '#(raw_swagger)'}.passed
* print "Successfully imported the swagger".................................passed
* call [The feature gets the list of API's from the input base path.This Feature can be run standalone or in sequence with other tests] [Import Swagger.json from the utils and print the output as a string] classpath:com/karate/openwhisk/apimanagement/get-api-list.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = 'guest'...................................................passed
Given url BaseUrl + '/api/v1/web/whisk.system/apimgmt/getApi.http?accesstoken=DUMMY+TOKEN&amp;basepath=v2'+ '&amp;spaceguid='+guid.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
When method get.............................................................passed
And string ApiList = response...............................................passed
Then status 200.............................................................passed
* print "Got the List of APIs Hurray!"......................................passed
* def getSwaggerList = call read('classpath:com/karate/openwhisk/apimanagement/get-api-list.feature') {guid:'#(guid)' ,Auth:'#(Auth)'}.passed
* print  = "Successfully got the List of API's".............................passed
* call [Used to Sleep between tests. sheepCount to (default 60 sec, pass '-1' to avoid) sleep as many seconds] [This line is required please do not delete - or the functions cannot be called] classpath:com/karate/openwhisk/utils/sleep.feature.passed
* def sleep =...............................................................passed
* print "I cam here"........................................................passed
* call sleep................................................................passed
* def sleepsometime = callonce read('classpath:com/karate/openwhisk/utils/sleep.feature') {sheepCount:'5'}.passed
* print "Got the List of APIs Hurray!"......................................passed
* call[0] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[1] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[2] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[3] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[4] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[5] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[6] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[7] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[8] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[9] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[10] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[11] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[12] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[13] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[14] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[15] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[16] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[17] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[18] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* call[19] [Hit the End Points and Assert for Success] [Hit the End Points and assert of they give a two hundred OK] classpath:com/karate/openwhisk/apimanagement/hit-api.feature.passed
* configure ssl = true......................................................passed
Given url BaseUrl + endpoint................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
* eval......................................................................passed
And request payload.........................................................passed
When method methodtype......................................................passed
Then status 200.............................................................passed
* def result = callonce read('classpath:com/karate/openwhisk/apimanagement/hit-api.feature') apis.passed
* call [The feature deletes the list of API from the input base path.This Feature can be run standalone or in sequence with other tests] [Import Swagger.json from the utils and print the output as a string] classpath:com/karate/openwhisk/apimanagement/delete-api-list.feature.passed
* configure ssl = true......................................................passed
* def nameSpace = 'guest'...................................................passed
Given url BaseUrl + '/api/v1/web/whisk.system/apimgmt/deleteApi.http?accesstoken=DUMMY+TOKEN&amp;basepath=v2'+ '&amp;spaceguid='+guid.passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
When method delete..........................................................passed
* print Successfully Deleted the API List...................................passed
Then status 204.............................................................passed
* def deleteSwagger = call read('classpath:com/karate/openwhisk/apimanagement/delete-api-list.feature') {guid:'#(guid)' ,Auth:'#(Auth)'}.passed
* print "Successfully imported the swagger".................................passed
* call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature.passed
* configure ssl = true......................................................passed
* def path = '/api/v1/namespaces/'+nameSpace+'/actions/'+actionName.........passed
Given url BaseUrl+path......................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
When method delete..........................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'getResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.passed
* call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature.passed
* configure ssl = true......................................................passed
* def path = '/api/v1/namespaces/'+nameSpace+'/actions/'+actionName.........passed
Given url BaseUrl+path......................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
When method delete..........................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'postResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.passed
* call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature.passed
* configure ssl = true......................................................passed
* def path = '/api/v1/namespaces/'+nameSpace+'/actions/'+actionName.........passed
Given url BaseUrl+path......................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
When method delete..........................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'putResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.passed
* call [Delete the action on the basis of the ActionName] [As a user I want to get the list of actions available for the given namespace] classpath:com/karate/openwhisk/wskactions/delete-action.feature.passed
* configure ssl = true......................................................passed
* def path = '/api/v1/namespaces/'+nameSpace+'/actions/'+actionName.........passed
Given url BaseUrl+path......................................................passed
And header Authorization = Auth.............................................passed
And header Content-Type = 'application/json'................................passed
When method delete..........................................................passed
* def responseStatusCode = responseStatus...................................passed
* print 'The value of responseStatusCode is:',responseStatusCode............passed
* eval......................................................................passed
* def deleteAction = call read('classpath:com/karate/openwhisk/wskactions/delete-action.feature') {actionName:'deleteResponse' ,nameSpace:'#(nameSpace)' ,Auth:'#(Auth)'}.passed
* print "Successfully deleted all the actions"..............................passed
</system-out>
   </testcase>
</testsuite>
